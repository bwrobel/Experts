<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AdditionalServicePaymentStrategy" xml:space="preserve">
    <value>za-dodatkowa-usluge</value>
  </data>
  <data name="AvailableMoney" xml:space="preserve">
    <value>Środki dostępne</value>
  </data>
  <data name="CreditCard" xml:space="preserve">
    <value>Karta kredytowa</value>
  </data>
  <data name="CurrentSaldo" xml:space="preserve">
    <value>Aktualne saldo</value>
  </data>
  <data name="EnoughFundsInfo" xml:space="preserve">
    <value>Posiadasz wystarczającą ilość środków na swoim koncie AskNuts, aby opłacić to pytanie. Nie ma potrzeby wykonywania dodatkowej płatności.</value>
  </data>
  <data name="EnterPasswordToSignUp" xml:space="preserve">
    <value>Po dokonaniu płatności zostanie założone Twoje konto w systemie Asknuts. Podaj hasło, które umożliwi późniejszy dostęp do systemu.</value>
  </data>
  <data name="FlashPayoffOrderSuccess" xml:space="preserve">
    <value>Przyjęto zlecenie wypłaty {0} zł na konto bankowe {1}.</value>
    <comment>0 - payoff value, 1 - bank account number</comment>
  </data>
  <data name="KipProviderTermsAndConditions" xml:space="preserve">
    <value>Kliknięcie przycisku "Uzyskaj odpowiedź" jest jednoznaczne z akceptacją &lt;a href="https://secure.transferuj.pl/regulamin.pdf" class="underline" onclick="logger.info('system płatności (kip)','kliknieto regulamin')"&gt;regulaminu systemu płatności&lt;/a&gt;.</value>
  </data>
  <data name="Pay" xml:space="preserve">
    <value>Zapłać</value>
  </data>
  <data name="PaymentContinue" xml:space="preserve">
    <value>Kontynuuj</value>
  </data>
  <data name="PaymentFailureConfirmation" xml:space="preserve">
    <value>Transakcja nie powiodła się. Spróbuj ponownie później.</value>
  </data>
  <data name="PaymentFailureTitle" xml:space="preserve">
    <value>Transakcja nie udana</value>
  </data>
  <data name="PaymentFormAddress" xml:space="preserve">
    <value>Adres</value>
  </data>
  <data name="PaymentFormChannel" xml:space="preserve">
    <value>Sposób płatności</value>
  </data>
  <data name="PaymentFormCity" xml:space="preserve">
    <value>Miejscowość</value>
  </data>
  <data name="PaymentFormEmail" xml:space="preserve">
    <value>Adres e-mail</value>
  </data>
  <data name="PaymentFormFieldEmailRequired" xml:space="preserve">
    <value>Pole Adres e-mail jest wymagane</value>
  </data>
  <data name="PaymentFormFieldFirstNameRequired" xml:space="preserve">
    <value>Pole Imię jest wymagane</value>
  </data>
  <data name="PaymentFormFieldIncorrectFormat" xml:space="preserve">
    <value>Nieprawidłowy format danych</value>
  </data>
  <data name="PaymentFormFieldLastNameRequired" xml:space="preserve">
    <value>Pole Nazwisko jest wymagane</value>
  </data>
  <data name="PaymentFormFieldRequired" xml:space="preserve">
    <value>Pole jest wymagane</value>
  </data>
  <data name="PaymentFormFirstName" xml:space="preserve">
    <value>Imię</value>
  </data>
  <data name="PaymentFormLastName" xml:space="preserve">
    <value>Nazwisko</value>
  </data>
  <data name="PaymentFormPostalCode" xml:space="preserve">
    <value>Kod pocztowy</value>
  </data>
  <data name="PaymentFormSelectPaymentChannel" xml:space="preserve">
    <value>wybierz sposób płatności</value>
  </data>
  <data name="PaymentFormSelectPaymentChannelTitle" xml:space="preserve">
    <value>Wybierz sposób płatności</value>
  </data>
  <data name="PaymentFormSignUp" xml:space="preserve">
    <value>chcę założyć bezpłatne konto w serwisie AskNuts.</value>
  </data>
  <data name="PaymentFormSubmit" xml:space="preserve">
    <value>Przejdź do płatności</value>
  </data>
  <data name="PaymentModalTitle" xml:space="preserve">
    <value>Płatność</value>
  </data>
  <data name="PaymentPendingConfirmation" xml:space="preserve">
    <value>Płatność jest w trakcie realizacji.</value>
  </data>
  <data name="PaymentRedirectParagraph" xml:space="preserve">
    <value>Za chwilę zostaniesz przekierowany do panelu płatności</value>
  </data>
  <data name="PaymentRedirectTitle" xml:space="preserve">
    <value>Trwa przekierowanie...</value>
  </data>
  <data name="PaymentSuccessConfirmation" xml:space="preserve">
    <value>Płatność przebiegła pomyślnie.</value>
  </data>
  <data name="PaymentSuccessTitle" xml:space="preserve">
    <value>Transakcja zakonczona sukcesem</value>
  </data>
  <data name="PaymentTitleForAnswer" xml:space="preserve">
    <value>Opłata za odpowiedź eksperta</value>
  </data>
  <data name="RecommenderBonus" xml:space="preserve">
    <value>Bonus za poleconego eksperta</value>
  </data>
  <data name="SomeFundsAvailable" xml:space="preserve">
    <value>Uwaga! Posiadasz obecnie {0} zł na swoim koncie użytkownika. Środki te zostaną odjęte od kwoty płatności.</value>
  </data>
  <data name="ThreadPaymentStrategy" xml:space="preserve">
    <value>za-watek</value>
  </data>
  <data name="ThreadSurchargeStrategy" xml:space="preserve">
    <value>za-watek-doplata</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Wpłata AskNuts</value>
  </data>
  <data name="TransferAcceptAnswerBrokerProvisionText" xml:space="preserve">
    <value>Prowizja za pośrednictwo przy pytniu '{0}...'</value>
    <comment>0 - thread name</comment>
  </data>
  <data name="TransferAcceptAnswerExpertProvisionText" xml:space="preserve">
    <value>Wynagrodzenie za pytanie '{0}...'</value>
    <comment>0 - thread name</comment>
  </data>
  <data name="TransferAcceptAnswerFeeText" xml:space="preserve">
    <value>Opłata z tytułu akceptacji pytania '{0}...'</value>
    <comment>0 - thread name</comment>
  </data>
  <data name="TransferCashAdditionalServicePayment" xml:space="preserve">
    <value>Wpłata za dodatkową usługę '{0}...'</value>
    <comment>0 - additional service name</comment>
  </data>
  <data name="TransferCashDefaultText" xml:space="preserve">
    <value>Opłata/wypłata środków</value>
  </data>
  <data name="TransferCashPayoff" xml:space="preserve">
    <value>Zlecenie wypłaty środków na życzenie klienta</value>
  </data>
  <data name="TransferCashThreadPayment" xml:space="preserve">
    <value>Wpłata na poczet pytania '{0}...'</value>
    <comment>0 - thread name</comment>
  </data>
  <data name="TransferPendingAdditionalServicePayment" xml:space="preserve">
    <value>Dodatkowa usługa '{0}...' została wstępnie opłacona</value>
    <comment>0 - additional service name</comment>
  </data>
  <data name="TransferPendingDefaultText" xml:space="preserve">
    <value>"Blokada/odblokowanie środków na koncie"</value>
  </data>
  <data name="TransferPendingThreadPayment" xml:space="preserve">
    <value>Pytanie '{0}...' zostało wstępnie opłacone</value>
    <comment>0 - thread name</comment>
  </data>
  <data name="TransferThreadPaymentPendingReleaseText" xml:space="preserve">
    <value>Odblokowanie środków z tytułu płatności za pytanie '{0}...'</value>
    <comment>0 - thread name</comment>
  </data>
  <data name="TransferThreadPaymentSurgargeReturnText" xml:space="preserve">
    <value>Odblokowanie środków z tytułu dopłaty za pytanie '{0}...'</value>
    <comment>0 - thread name</comment>
  </data>
  <data name="Value" xml:space="preserve">
    <value>Kwota płatności</value>
  </data>
</root>