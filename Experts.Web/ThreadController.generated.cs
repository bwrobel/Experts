// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments
#pragma warning disable
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace Experts.Web.Controllers
{
    public partial class ThreadController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ThreadController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected ThreadController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult ChildCategoryAttributes()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ChildCategoryAttributes);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult GetThreadValue()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetThreadValue);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult GetThreadVerbocity()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetThreadVerbocity);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Save()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Save);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult ThreadDetails()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ThreadDetails);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult CatalogThreadDetails()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CatalogThreadDetails);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult UpdatePost()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdatePost);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult ShowPost()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ShowPost);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Sanitization()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Sanitization);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult EditPublicSanitizedThreadTitle()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EditPublicSanitizedThreadTitle);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult SanitizationUpdatePost()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SanitizationUpdatePost);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult SanitizationUpdateThread()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SanitizationUpdateThread);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult TogglePostVisibility()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.TogglePostVisibility);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult ShowExpertInfo()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ShowExpertInfo);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult SingleExpertBox()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SingleExpertBox);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult MultiExpertBox()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.MultiExpertBox);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult ExpertInfo()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ExpertInfo);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult CreatePost()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CreatePost);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult GetAllPosts()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetAllPosts);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult GetPriceProposalNotification()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetPriceProposalNotification);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult ShowPriceProposalNotification()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ShowPriceProposalNotification);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult DateDifference()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DateDifference);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult GetThreadDetailsMenu()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetThreadDetailsMenu);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult ShowThreadDetailsMenu()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ShowThreadDetailsMenu);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult DirectQuestion()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DirectQuestion);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult ReleaseReservedQuestion()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ReleaseReservedQuestion);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult ThreadAttachmentUpload()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ThreadAttachmentUpload);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult PrecedingUpload()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PrecedingUpload);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult AttachmentTiles()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AttachmentTiles);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult DeleteAttachmentTile()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteAttachmentTile);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult GetTemporaryAttachmentsCount()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetTemporaryAttachmentsCount);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult GetAttachment()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetAttachment);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult DeletePost()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeletePost);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult DeleteAttachment()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteAttachment);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult OccupyThread()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.OccupyThread);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult ExtendOccupyThreadLockTime()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ExtendOccupyThreadLockTime);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult GiveUp()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GiveUp);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult DeleteThread()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteThread);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult CreateFeedback()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CreateFeedback);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult CreateFeedbackForm()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CreateFeedbackForm);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult ReportIssueForm()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ReportIssueForm);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult ReportIssue()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ReportIssue);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult CategoryExpertsOnlineInfo()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CategoryExpertsOnlineInfo);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult PriceProposalForm()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PriceProposalForm);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult PriceProposal()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PriceProposal);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult UserDefinedPriceForm()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UserDefinedPriceForm);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult UserDefinedPrice()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UserDefinedPrice);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult ProposeAdditionalService()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ProposeAdditionalService);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult AdditionalServiceInformation()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AdditionalServiceInformation);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult DeclineAdditionalService()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeclineAdditionalService);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult GetThreadDetailsByStatus()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetThreadDetailsByStatus);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult IncreaseExpertValueForm()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.IncreaseExpertValueForm);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult IncreaseExpertValue()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.IncreaseExpertValue);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult DisplaySelectedCategoryAttributes()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DisplaySelectedCategoryAttributes);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Question()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Question);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ThreadController Actions { get { return MVC.Thread; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Thread";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Thread";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string CategoryAttributes = "CategoryAttributes";
            public readonly string ChildCategoryAttributes = "ChildCategoryAttributes";
            public readonly string Options = "Options";
            public readonly string GetThreadValue = "GetThreadValue";
            public readonly string GetThreadVerbocity = "GetThreadVerbocity";
            public readonly string Save = "Save";
            public readonly string AvailableQuestionList = "AvailableQuestionList";
            public readonly string CatalogQuestionList = "CatalogQuestionList";
            public readonly string SanitizationQuestionList = "SanitizationQuestionList";
            public readonly string ModeratorQuestionList = "ModeratorQuestionList";
            public readonly string ThreadDetails = "ThreadDetails";
            public readonly string CatalogThreadDetails = "CatalogThreadDetails";
            public readonly string UpdatePost = "UpdatePost";
            public readonly string ShowPost = "ShowPost";
            public readonly string Sanitization = "Sanitization";
            public readonly string EditPublicSanitizedThreadTitle = "EditPublicSanitizedThreadTitle";
            public readonly string SanitizationUpdatePost = "SanitizationUpdatePost";
            public readonly string SanitizationUpdateThread = "SanitizationUpdateThread";
            public readonly string TogglePostVisibility = "TogglePostVisibility";
            public readonly string ShowExpertInfo = "ShowExpertInfo";
            public readonly string SingleExpertBox = "SingleExpertBox";
            public readonly string MultiExpertBox = "MultiExpertBox";
            public readonly string MultiExpertBoxData = "MultiExpertBoxData";
            public readonly string ExpertInfo = "ExpertInfo";
            public readonly string CreatePost = "CreatePost";
            public readonly string GetAllPosts = "GetAllPosts";
            public readonly string GetPriceProposalNotification = "GetPriceProposalNotification";
            public readonly string ShowPriceProposalNotification = "ShowPriceProposalNotification";
            public readonly string DateDifference = "DateDifference";
            public readonly string GetThreadDetailsMenu = "GetThreadDetailsMenu";
            public readonly string ShowThreadDetailsMenu = "ShowThreadDetailsMenu";
            public readonly string DirectQuestion = "DirectQuestion";
            public readonly string ReleaseReservedQuestion = "ReleaseReservedQuestion";
            public readonly string ThreadAttachmentUpload = "ThreadAttachmentUpload";
            public readonly string PrecedingUpload = "PrecedingUpload";
            public readonly string AttachmentTiles = "AttachmentTiles";
            public readonly string DeleteAttachmentTile = "DeleteAttachmentTile";
            public readonly string GetTemporaryAttachmentsCount = "GetTemporaryAttachmentsCount";
            public readonly string GetAttachment = "GetAttachment";
            public readonly string DeletePost = "DeletePost";
            public readonly string DeleteAttachment = "DeleteAttachment";
            public readonly string OccupyThread = "OccupyThread";
            public readonly string ExtendOccupyThreadLockTime = "ExtendOccupyThreadLockTime";
            public readonly string GiveUp = "GiveUp";
            public readonly string DeleteThread = "DeleteThread";
            public readonly string CreateFeedback = "CreateFeedback";
            public readonly string CreateFeedbackForm = "CreateFeedbackForm";
            public readonly string ReportIssueForm = "ReportIssueForm";
            public readonly string ReportIssue = "ReportIssue";
            public readonly string CategoryExpertsOnlineInfo = "CategoryExpertsOnlineInfo";
            public readonly string PriceProposalForm = "PriceProposalForm";
            public readonly string PriceProposal = "PriceProposal";
            public readonly string UserDefinedPriceForm = "UserDefinedPriceForm";
            public readonly string UserDefinedPrice = "UserDefinedPrice";
            public readonly string ProposeAdditionalService = "ProposeAdditionalService";
            public readonly string AdditionalServiceInformation = "AdditionalServiceInformation";
            public readonly string DeclineAdditionalService = "DeclineAdditionalService";
            public readonly string GetThreadDetailsByStatus = "GetThreadDetailsByStatus";
            public readonly string IncreaseExpertValueForm = "IncreaseExpertValueForm";
            public readonly string IncreaseExpertValue = "IncreaseExpertValue";
            public readonly string DisplaySelectedCategoryAttributes = "DisplaySelectedCategoryAttributes";
            public readonly string Question = "Question";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string CategoryAttributes = "CategoryAttributes";
            public const string ChildCategoryAttributes = "ChildCategoryAttributes";
            public const string Options = "Options";
            public const string GetThreadValue = "GetThreadValue";
            public const string GetThreadVerbocity = "GetThreadVerbocity";
            public const string Save = "Save";
            public const string AvailableQuestionList = "AvailableQuestionList";
            public const string CatalogQuestionList = "CatalogQuestionList";
            public const string SanitizationQuestionList = "SanitizationQuestionList";
            public const string ModeratorQuestionList = "ModeratorQuestionList";
            public const string ThreadDetails = "ThreadDetails";
            public const string CatalogThreadDetails = "CatalogThreadDetails";
            public const string UpdatePost = "UpdatePost";
            public const string ShowPost = "ShowPost";
            public const string Sanitization = "Sanitization";
            public const string EditPublicSanitizedThreadTitle = "EditPublicSanitizedThreadTitle";
            public const string SanitizationUpdatePost = "SanitizationUpdatePost";
            public const string SanitizationUpdateThread = "SanitizationUpdateThread";
            public const string TogglePostVisibility = "TogglePostVisibility";
            public const string ShowExpertInfo = "ShowExpertInfo";
            public const string SingleExpertBox = "SingleExpertBox";
            public const string MultiExpertBox = "MultiExpertBox";
            public const string MultiExpertBoxData = "MultiExpertBoxData";
            public const string ExpertInfo = "ExpertInfo";
            public const string CreatePost = "CreatePost";
            public const string GetAllPosts = "GetAllPosts";
            public const string GetPriceProposalNotification = "GetPriceProposalNotification";
            public const string ShowPriceProposalNotification = "ShowPriceProposalNotification";
            public const string DateDifference = "DateDifference";
            public const string GetThreadDetailsMenu = "GetThreadDetailsMenu";
            public const string ShowThreadDetailsMenu = "ShowThreadDetailsMenu";
            public const string DirectQuestion = "DirectQuestion";
            public const string ReleaseReservedQuestion = "ReleaseReservedQuestion";
            public const string ThreadAttachmentUpload = "ThreadAttachmentUpload";
            public const string PrecedingUpload = "PrecedingUpload";
            public const string AttachmentTiles = "AttachmentTiles";
            public const string DeleteAttachmentTile = "DeleteAttachmentTile";
            public const string GetTemporaryAttachmentsCount = "GetTemporaryAttachmentsCount";
            public const string GetAttachment = "GetAttachment";
            public const string DeletePost = "DeletePost";
            public const string DeleteAttachment = "DeleteAttachment";
            public const string OccupyThread = "OccupyThread";
            public const string ExtendOccupyThreadLockTime = "ExtendOccupyThreadLockTime";
            public const string GiveUp = "GiveUp";
            public const string DeleteThread = "DeleteThread";
            public const string CreateFeedback = "CreateFeedback";
            public const string CreateFeedbackForm = "CreateFeedbackForm";
            public const string ReportIssueForm = "ReportIssueForm";
            public const string ReportIssue = "ReportIssue";
            public const string CategoryExpertsOnlineInfo = "CategoryExpertsOnlineInfo";
            public const string PriceProposalForm = "PriceProposalForm";
            public const string PriceProposal = "PriceProposal";
            public const string UserDefinedPriceForm = "UserDefinedPriceForm";
            public const string UserDefinedPrice = "UserDefinedPrice";
            public const string ProposeAdditionalService = "ProposeAdditionalService";
            public const string AdditionalServiceInformation = "AdditionalServiceInformation";
            public const string DeclineAdditionalService = "DeclineAdditionalService";
            public const string GetThreadDetailsByStatus = "GetThreadDetailsByStatus";
            public const string IncreaseExpertValueForm = "IncreaseExpertValueForm";
            public const string IncreaseExpertValue = "IncreaseExpertValue";
            public const string DisplaySelectedCategoryAttributes = "DisplaySelectedCategoryAttributes";
            public const string Question = "Question";
        }


        static readonly ActionParamsClass_CategoryAttributes s_params_CategoryAttributes = new ActionParamsClass_CategoryAttributes();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CategoryAttributes CategoryAttributesParams { get { return s_params_CategoryAttributes; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CategoryAttributes
        {
            public readonly string form = "ThreadForm";
            public readonly string brokerId = "brokerId";
        }
        static readonly ActionParamsClass_ChildCategoryAttributes s_params_ChildCategoryAttributes = new ActionParamsClass_ChildCategoryAttributes();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ChildCategoryAttributes ChildCategoryAttributesParams { get { return s_params_ChildCategoryAttributes; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ChildCategoryAttributes
        {
            public readonly string attributeValues = "ThreadForm.AttributeValues";
            public readonly string attributeId = "attributeId";
        }
        static readonly ActionParamsClass_Options s_params_Options = new ActionParamsClass_Options();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Options OptionsParams { get { return s_params_Options; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Options
        {
            public readonly string model = "ThreadForm";
        }
        static readonly ActionParamsClass_GetThreadValue s_params_GetThreadValue = new ActionParamsClass_GetThreadValue();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetThreadValue GetThreadValueParams { get { return s_params_GetThreadValue; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetThreadValue
        {
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_GetThreadVerbocity s_params_GetThreadVerbocity = new ActionParamsClass_GetThreadVerbocity();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetThreadVerbocity GetThreadVerbocityParams { get { return s_params_GetThreadVerbocity; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetThreadVerbocity
        {
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_Save s_params_Save = new ActionParamsClass_Save();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Save SaveParams { get { return s_params_Save; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Save
        {
            public readonly string form = "form";
        }
        static readonly ActionParamsClass_AvailableQuestionList s_params_AvailableQuestionList = new ActionParamsClass_AvailableQuestionList();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AvailableQuestionList AvailableQuestionListParams { get { return s_params_AvailableQuestionList; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AvailableQuestionList
        {
            public readonly string categoryId = "categoryId";
            public readonly string sortColumn = "sortColumn";
            public readonly string page = "page";
        }
        static readonly ActionParamsClass_CatalogQuestionList s_params_CatalogQuestionList = new ActionParamsClass_CatalogQuestionList();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CatalogQuestionList CatalogQuestionListParams { get { return s_params_CatalogQuestionList; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CatalogQuestionList
        {
            public readonly string page = "page";
        }
        static readonly ActionParamsClass_SanitizationQuestionList s_params_SanitizationQuestionList = new ActionParamsClass_SanitizationQuestionList();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SanitizationQuestionList SanitizationQuestionListParams { get { return s_params_SanitizationQuestionList; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SanitizationQuestionList
        {
            public readonly string sanitizationStatus = "sanitizationStatus";
            public readonly string sortOptions = "sortOptions";
            public readonly string page = "page";
        }
        static readonly ActionParamsClass_ModeratorQuestionList s_params_ModeratorQuestionList = new ActionParamsClass_ModeratorQuestionList();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ModeratorQuestionList ModeratorQuestionListParams { get { return s_params_ModeratorQuestionList; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ModeratorQuestionList
        {
            public readonly string categoryId = "categoryId";
            public readonly string sortOptions = "sortOptions";
            public readonly string page = "page";
        }
        static readonly ActionParamsClass_ThreadDetails s_params_ThreadDetails = new ActionParamsClass_ThreadDetails();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ThreadDetails ThreadDetailsParams { get { return s_params_ThreadDetails; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ThreadDetails
        {
            public readonly string threadId = "threadId";
            public readonly string postForm = "postForm";
        }
        static readonly ActionParamsClass_CatalogThreadDetails s_params_CatalogThreadDetails = new ActionParamsClass_CatalogThreadDetails();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CatalogThreadDetails CatalogThreadDetailsParams { get { return s_params_CatalogThreadDetails; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CatalogThreadDetails
        {
            public readonly string threadId = "threadId";
            public readonly string title = "title";
        }
        static readonly ActionParamsClass_UpdatePost s_params_UpdatePost = new ActionParamsClass_UpdatePost();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdatePost UpdatePostParams { get { return s_params_UpdatePost; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdatePost
        {
            public readonly string postId = "postId";
            public readonly string postContent = "postContent";
        }
        static readonly ActionParamsClass_ShowPost s_params_ShowPost = new ActionParamsClass_ShowPost();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ShowPost ShowPostParams { get { return s_params_ShowPost; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ShowPost
        {
            public readonly string post = "post";
            public readonly string isCatalogMode = "isCatalogMode";
            public readonly string isSanitizationMode = "isSanitizationMode";
        }
        static readonly ActionParamsClass_Sanitization s_params_Sanitization = new ActionParamsClass_Sanitization();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Sanitization SanitizationParams { get { return s_params_Sanitization; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Sanitization
        {
            public readonly string threadId = "threadId";
        }
        static readonly ActionParamsClass_EditPublicSanitizedThreadTitle s_params_EditPublicSanitizedThreadTitle = new ActionParamsClass_EditPublicSanitizedThreadTitle();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_EditPublicSanitizedThreadTitle EditPublicSanitizedThreadTitleParams { get { return s_params_EditPublicSanitizedThreadTitle; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_EditPublicSanitizedThreadTitle
        {
            public readonly string model = "Thread";
        }
        static readonly ActionParamsClass_SanitizationUpdatePost s_params_SanitizationUpdatePost = new ActionParamsClass_SanitizationUpdatePost();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SanitizationUpdatePost SanitizationUpdatePostParams { get { return s_params_SanitizationUpdatePost; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SanitizationUpdatePost
        {
            public readonly string postId = "postId";
            public readonly string postPublicContent = "postPublicContent";
        }
        static readonly ActionParamsClass_SanitizationUpdateThread s_params_SanitizationUpdateThread = new ActionParamsClass_SanitizationUpdateThread();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SanitizationUpdateThread SanitizationUpdateThreadParams { get { return s_params_SanitizationUpdateThread; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SanitizationUpdateThread
        {
            public readonly string threadId = "threadId";
            public readonly string sanitizationStatus = "sanitizationStatus";
        }
        static readonly ActionParamsClass_TogglePostVisibility s_params_TogglePostVisibility = new ActionParamsClass_TogglePostVisibility();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_TogglePostVisibility TogglePostVisibilityParams { get { return s_params_TogglePostVisibility; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_TogglePostVisibility
        {
            public readonly string postId = "postId";
        }
        static readonly ActionParamsClass_ShowExpertInfo s_params_ShowExpertInfo = new ActionParamsClass_ShowExpertInfo();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ShowExpertInfo ShowExpertInfoParams { get { return s_params_ShowExpertInfo; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ShowExpertInfo
        {
            public readonly string thread = "thread";
        }
        static readonly ActionParamsClass_SingleExpertBox s_params_SingleExpertBox = new ActionParamsClass_SingleExpertBox();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SingleExpertBox SingleExpertBoxParams { get { return s_params_SingleExpertBox; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SingleExpertBox
        {
            public readonly string expertId = "expertId";
            public readonly string title = "title";
            public readonly string categoryThreadId = "categoryThreadId";
            public readonly string showVerificationDetails = "showVerificationDetails";
            public readonly string isEmbedded = "isEmbedded";
        }
        static readonly ActionParamsClass_MultiExpertBox s_params_MultiExpertBox = new ActionParamsClass_MultiExpertBox();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_MultiExpertBox MultiExpertBoxParams { get { return s_params_MultiExpertBox; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_MultiExpertBox
        {
            public readonly string feedbacksVisible = "feedbacksVisible";
            public readonly string categoryId = "categoryId";
        }
        static readonly ActionParamsClass_MultiExpertBoxData s_params_MultiExpertBoxData = new ActionParamsClass_MultiExpertBoxData();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_MultiExpertBoxData MultiExpertBoxDataParams { get { return s_params_MultiExpertBoxData; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_MultiExpertBoxData
        {
            public readonly string categoryId = "categoryId";
        }
        static readonly ActionParamsClass_ExpertInfo s_params_ExpertInfo = new ActionParamsClass_ExpertInfo();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ExpertInfo ExpertInfoParams { get { return s_params_ExpertInfo; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ExpertInfo
        {
            public readonly string expertId = "expertId";
            public readonly string feedbacksVisible = "feedbacksVisible";
        }
        static readonly ActionParamsClass_CreatePost s_params_CreatePost = new ActionParamsClass_CreatePost();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CreatePost CreatePostParams { get { return s_params_CreatePost; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CreatePost
        {
            public readonly string model = "PostForm";
        }
        static readonly ActionParamsClass_GetAllPosts s_params_GetAllPosts = new ActionParamsClass_GetAllPosts();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetAllPosts GetAllPostsParams { get { return s_params_GetAllPosts; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetAllPosts
        {
            public readonly string threadId = "threadId";
        }
        static readonly ActionParamsClass_GetPriceProposalNotification s_params_GetPriceProposalNotification = new ActionParamsClass_GetPriceProposalNotification();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetPriceProposalNotification GetPriceProposalNotificationParams { get { return s_params_GetPriceProposalNotification; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetPriceProposalNotification
        {
            public readonly string threadId = "threadId";
        }
        static readonly ActionParamsClass_ShowPriceProposalNotification s_params_ShowPriceProposalNotification = new ActionParamsClass_ShowPriceProposalNotification();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ShowPriceProposalNotification ShowPriceProposalNotificationParams { get { return s_params_ShowPriceProposalNotification; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ShowPriceProposalNotification
        {
            public readonly string thread = "thread";
        }
        static readonly ActionParamsClass_DateDifference s_params_DateDifference = new ActionParamsClass_DateDifference();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DateDifference DateDifferenceParams { get { return s_params_DateDifference; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DateDifference
        {
            public readonly string threadId = "threadId";
            public readonly string threadLastModDate = "threadLastModDate";
        }
        static readonly ActionParamsClass_GetThreadDetailsMenu s_params_GetThreadDetailsMenu = new ActionParamsClass_GetThreadDetailsMenu();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetThreadDetailsMenu GetThreadDetailsMenuParams { get { return s_params_GetThreadDetailsMenu; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetThreadDetailsMenu
        {
            public readonly string threadId = "threadId";
            public readonly string isModerator = "isModerator";
        }
        static readonly ActionParamsClass_ShowThreadDetailsMenu s_params_ShowThreadDetailsMenu = new ActionParamsClass_ShowThreadDetailsMenu();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ShowThreadDetailsMenu ShowThreadDetailsMenuParams { get { return s_params_ShowThreadDetailsMenu; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ShowThreadDetailsMenu
        {
            public readonly string thread = "thread";
            public readonly string isModerator = "isModerator";
            public readonly string post = "post";
        }
        static readonly ActionParamsClass_DirectQuestion s_params_DirectQuestion = new ActionParamsClass_DirectQuestion();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DirectQuestion DirectQuestionParams { get { return s_params_DirectQuestion; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DirectQuestion
        {
            public readonly string expertId = "expertId";
            public readonly string threadId = "threadId";
        }
        static readonly ActionParamsClass_ReleaseReservedQuestion s_params_ReleaseReservedQuestion = new ActionParamsClass_ReleaseReservedQuestion();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ReleaseReservedQuestion ReleaseReservedQuestionParams { get { return s_params_ReleaseReservedQuestion; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ReleaseReservedQuestion
        {
            public readonly string threadId = "threadId";
        }
        static readonly ActionParamsClass_ThreadAttachmentUpload s_params_ThreadAttachmentUpload = new ActionParamsClass_ThreadAttachmentUpload();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ThreadAttachmentUpload ThreadAttachmentUploadParams { get { return s_params_ThreadAttachmentUpload; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ThreadAttachmentUpload
        {
            public readonly string threadId = "threadId";
        }
        static readonly ActionParamsClass_PrecedingUpload s_params_PrecedingUpload = new ActionParamsClass_PrecedingUpload();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_PrecedingUpload PrecedingUploadParams { get { return s_params_PrecedingUpload; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_PrecedingUpload
        {
            public readonly string temporaryAttachmentFolder = "temporaryAttachmentFolder";
        }
        static readonly ActionParamsClass_AttachmentTiles s_params_AttachmentTiles = new ActionParamsClass_AttachmentTiles();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AttachmentTiles AttachmentTilesParams { get { return s_params_AttachmentTiles; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AttachmentTiles
        {
            public readonly string temporaryAttachmentFolder = "temporaryAttachmentFolder";
            public readonly string isTiny = "isTiny";
            public readonly string allowNoAttachments = "allowNoAttachments";
        }
        static readonly ActionParamsClass_DeleteAttachmentTile s_params_DeleteAttachmentTile = new ActionParamsClass_DeleteAttachmentTile();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DeleteAttachmentTile DeleteAttachmentTileParams { get { return s_params_DeleteAttachmentTile; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DeleteAttachmentTile
        {
            public readonly string fileName = "fileName";
            public readonly string temporaryAttachmentFolder = "temporaryAttachmentFolder";
        }
        static readonly ActionParamsClass_GetTemporaryAttachmentsCount s_params_GetTemporaryAttachmentsCount = new ActionParamsClass_GetTemporaryAttachmentsCount();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetTemporaryAttachmentsCount GetTemporaryAttachmentsCountParams { get { return s_params_GetTemporaryAttachmentsCount; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetTemporaryAttachmentsCount
        {
            public readonly string temporaryAttachmentFolder = "temporaryAttachmentFolder";
        }
        static readonly ActionParamsClass_GetAttachment s_params_GetAttachment = new ActionParamsClass_GetAttachment();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetAttachment GetAttachmentParams { get { return s_params_GetAttachment; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetAttachment
        {
            public readonly string attachmentId = "attachmentId";
        }
        static readonly ActionParamsClass_DeletePost s_params_DeletePost = new ActionParamsClass_DeletePost();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DeletePost DeletePostParams { get { return s_params_DeletePost; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DeletePost
        {
            public readonly string postId = "postId";
        }
        static readonly ActionParamsClass_DeleteAttachment s_params_DeleteAttachment = new ActionParamsClass_DeleteAttachment();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DeleteAttachment DeleteAttachmentParams { get { return s_params_DeleteAttachment; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DeleteAttachment
        {
            public readonly string attachmentId = "attachmentId";
        }
        static readonly ActionParamsClass_OccupyThread s_params_OccupyThread = new ActionParamsClass_OccupyThread();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_OccupyThread OccupyThreadParams { get { return s_params_OccupyThread; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_OccupyThread
        {
            public readonly string threadId = "threadId";
        }
        static readonly ActionParamsClass_ExtendOccupyThreadLockTime s_params_ExtendOccupyThreadLockTime = new ActionParamsClass_ExtendOccupyThreadLockTime();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ExtendOccupyThreadLockTime ExtendOccupyThreadLockTimeParams { get { return s_params_ExtendOccupyThreadLockTime; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ExtendOccupyThreadLockTime
        {
            public readonly string threadId = "threadId";
        }
        static readonly ActionParamsClass_GiveUp s_params_GiveUp = new ActionParamsClass_GiveUp();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GiveUp GiveUpParams { get { return s_params_GiveUp; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GiveUp
        {
            public readonly string threadId = "threadId";
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_DeleteThread s_params_DeleteThread = new ActionParamsClass_DeleteThread();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DeleteThread DeleteThreadParams { get { return s_params_DeleteThread; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DeleteThread
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_CreateFeedback s_params_CreateFeedback = new ActionParamsClass_CreateFeedback();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CreateFeedback CreateFeedbackParams { get { return s_params_CreateFeedback; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CreateFeedback
        {
            public readonly string threadId = "threadId";
        }
        static readonly ActionParamsClass_CreateFeedbackForm s_params_CreateFeedbackForm = new ActionParamsClass_CreateFeedbackForm();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CreateFeedbackForm CreateFeedbackFormParams { get { return s_params_CreateFeedbackForm; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CreateFeedbackForm
        {
            public readonly string form = "form";
            public readonly string threadId = "threadId";
            public readonly string skipAnswerFeedback = "skipAnswerFeedback";
        }
        static readonly ActionParamsClass_ReportIssueForm s_params_ReportIssueForm = new ActionParamsClass_ReportIssueForm();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ReportIssueForm ReportIssueFormParams { get { return s_params_ReportIssueForm; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ReportIssueForm
        {
            public readonly string threadId = "threadId";
        }
        static readonly ActionParamsClass_ReportIssue s_params_ReportIssue = new ActionParamsClass_ReportIssue();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ReportIssue ReportIssueParams { get { return s_params_ReportIssue; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ReportIssue
        {
            public readonly string form = "form";
        }
        static readonly ActionParamsClass_CategoryExpertsOnlineInfo s_params_CategoryExpertsOnlineInfo = new ActionParamsClass_CategoryExpertsOnlineInfo();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CategoryExpertsOnlineInfo CategoryExpertsOnlineInfoParams { get { return s_params_CategoryExpertsOnlineInfo; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CategoryExpertsOnlineInfo
        {
            public readonly string categoryId = "categoryId";
        }
        static readonly ActionParamsClass_PriceProposalForm s_params_PriceProposalForm = new ActionParamsClass_PriceProposalForm();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_PriceProposalForm PriceProposalFormParams { get { return s_params_PriceProposalForm; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_PriceProposalForm
        {
            public readonly string data = "data";
            public readonly string defaultValue = "defaultValue";
        }
        static readonly ActionParamsClass_PriceProposal s_params_PriceProposal = new ActionParamsClass_PriceProposal();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_PriceProposal PriceProposalParams { get { return s_params_PriceProposal; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_PriceProposal
        {
            public readonly string form = "form";
        }
        static readonly ActionParamsClass_UserDefinedPriceForm s_params_UserDefinedPriceForm = new ActionParamsClass_UserDefinedPriceForm();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UserDefinedPriceForm UserDefinedPriceFormParams { get { return s_params_UserDefinedPriceForm; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UserDefinedPriceForm
        {
            public readonly string form = "form";
        }
        static readonly ActionParamsClass_UserDefinedPrice s_params_UserDefinedPrice = new ActionParamsClass_UserDefinedPrice();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UserDefinedPrice UserDefinedPriceParams { get { return s_params_UserDefinedPrice; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UserDefinedPrice
        {
            public readonly string form = "form";
        }
        static readonly ActionParamsClass_ProposeAdditionalService s_params_ProposeAdditionalService = new ActionParamsClass_ProposeAdditionalService();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ProposeAdditionalService ProposeAdditionalServiceParams { get { return s_params_ProposeAdditionalService; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ProposeAdditionalService
        {
            public readonly string threadId = "threadId";
            public readonly string form = "form";
        }
        static readonly ActionParamsClass_AdditionalServiceInformation s_params_AdditionalServiceInformation = new ActionParamsClass_AdditionalServiceInformation();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AdditionalServiceInformation AdditionalServiceInformationParams { get { return s_params_AdditionalServiceInformation; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AdditionalServiceInformation
        {
            public readonly string threadId = "threadId";
        }
        static readonly ActionParamsClass_DeclineAdditionalService s_params_DeclineAdditionalService = new ActionParamsClass_DeclineAdditionalService();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DeclineAdditionalService DeclineAdditionalServiceParams { get { return s_params_DeclineAdditionalService; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DeclineAdditionalService
        {
            public readonly string additionalServiceId = "additionalServiceId";
        }
        static readonly ActionParamsClass_GetThreadDetailsByStatus s_params_GetThreadDetailsByStatus = new ActionParamsClass_GetThreadDetailsByStatus();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetThreadDetailsByStatus GetThreadDetailsByStatusParams { get { return s_params_GetThreadDetailsByStatus; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetThreadDetailsByStatus
        {
            public readonly string threadId = "threadId";
            public readonly string threadIntState = "threadIntState";
        }
        static readonly ActionParamsClass_IncreaseExpertValueForm s_params_IncreaseExpertValueForm = new ActionParamsClass_IncreaseExpertValueForm();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_IncreaseExpertValueForm IncreaseExpertValueFormParams { get { return s_params_IncreaseExpertValueForm; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_IncreaseExpertValueForm
        {
            public readonly string threadId = "threadId";
        }
        static readonly ActionParamsClass_IncreaseExpertValue s_params_IncreaseExpertValue = new ActionParamsClass_IncreaseExpertValue();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_IncreaseExpertValue IncreaseExpertValueParams { get { return s_params_IncreaseExpertValue; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_IncreaseExpertValue
        {
            public readonly string form = "form";
        }
        static readonly ActionParamsClass_DisplaySelectedCategoryAttributes s_params_DisplaySelectedCategoryAttributes = new ActionParamsClass_DisplaySelectedCategoryAttributes();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DisplaySelectedCategoryAttributes DisplaySelectedCategoryAttributesParams { get { return s_params_DisplaySelectedCategoryAttributes; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DisplaySelectedCategoryAttributes
        {
            public readonly string threadId = "threadId";
        }
        static readonly ActionParamsClass_Question s_params_Question = new ActionParamsClass_Question();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Question QuestionParams { get { return s_params_Question; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Question
        {
            public readonly string form = "form";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string _AnswerInstructions = "_AnswerInstructions";
                public readonly string _AttachmentPost = "_AttachmentPost";
                public readonly string _AttachmentTiles = "_AttachmentTiles";
                public readonly string _CatalogThread = "_CatalogThread";
                public readonly string _CategoryAttributes = "_CategoryAttributes";
                public readonly string _CreatePostForm = "_CreatePostForm";
                public readonly string _DisplaySelectedCategoryAttributes = "_DisplaySelectedCategoryAttributes";
                public readonly string _ExpertBox = "_ExpertBox";
                public readonly string _ExpertOverview = "_ExpertOverview";
                public readonly string _ExpertProposals = "_ExpertProposals";
                public readonly string _Form = "_Form";
                public readonly string _FormTiny = "_FormTiny";
                public readonly string _KeywordTilesItems = "_KeywordTilesItems";
                public readonly string _MultiExpertBox = "_MultiExpertBox";
                public readonly string _Post = "_Post";
                public readonly string _PostSanitize = "_PostSanitize";
                public readonly string _PriceProposalNotification = "_PriceProposalNotification";
                public readonly string _ProfileQuestionsItems = "_ProfileQuestionsItems";
                public readonly string _Question = "_Question";
                public readonly string _QuestionsListItems = "_QuestionsListItems";
                public readonly string _ReleaseTimer = "_ReleaseTimer";
                public readonly string _SatisfactionTable = "_SatisfactionTable";
                public readonly string _Thread = "_Thread";
                public readonly string _ThreadAcceptedNorification = "_ThreadAcceptedNorification";
                public readonly string _ThreadCategoryAttributes = "_ThreadCategoryAttributes";
                public readonly string _ThreadDetailsMenu = "_ThreadDetailsMenu";
                public readonly string _UnknownExpertBox = "_UnknownExpertBox";
                public readonly string _UserOverview = "_UserOverview";
                public readonly string _WarrantyFrame = "_WarrantyFrame";
                public readonly string AdditionalServiceInformation = "AdditionalServiceInformation";
                public readonly string AuthenticationTypeSelect = "AuthenticationTypeSelect";
                public readonly string AvailableQuestionList = "AvailableQuestionList";
                public readonly string CatalogQuestionList = "CatalogQuestionList";
                public readonly string CatalogThreadDetails = "CatalogThreadDetails";
                public readonly string CategoryAttributes = "CategoryAttributes";
                public readonly string CreateFeedback = "CreateFeedback";
                public readonly string GiveUp = "GiveUp";
                public readonly string IncreaseExpertValueForm = "IncreaseExpertValueForm";
                public readonly string ModeratorQuestionList = "ModeratorQuestionList";
                public readonly string Options = "Options";
                public readonly string PriceProposalForm = "PriceProposalForm";
                public readonly string ProposeAdditionalService = "ProposeAdditionalService";
                public readonly string ReportIssueForm = "ReportIssueForm";
                public readonly string SanitizationQuestionList = "SanitizationQuestionList";
                public readonly string ThreadDetailsForAuthor = "ThreadDetailsForAuthor";
                public readonly string ThreadDetailsForExperts = "ThreadDetailsForExperts";
                public readonly string ThreadDetailsForModerator = "ThreadDetailsForModerator";
                public readonly string ThreadDetailsForSanitization = "ThreadDetailsForSanitization";
                public readonly string UserDefinedPriceForm = "UserDefinedPriceForm";
            }
            public readonly string _AnswerInstructions = "~/Views/Thread/_AnswerInstructions.cshtml";
            public readonly string _AttachmentPost = "~/Views/Thread/_AttachmentPost.cshtml";
            public readonly string _AttachmentTiles = "~/Views/Thread/_AttachmentTiles.cshtml";
            public readonly string _CatalogThread = "~/Views/Thread/_CatalogThread.cshtml";
            public readonly string _CategoryAttributes = "~/Views/Thread/_CategoryAttributes.cshtml";
            public readonly string _CreatePostForm = "~/Views/Thread/_CreatePostForm.cshtml";
            public readonly string _DisplaySelectedCategoryAttributes = "~/Views/Thread/_DisplaySelectedCategoryAttributes.cshtml";
            public readonly string _ExpertBox = "~/Views/Thread/_ExpertBox.cshtml";
            public readonly string _ExpertOverview = "~/Views/Thread/_ExpertOverview.cshtml";
            public readonly string _ExpertProposals = "~/Views/Thread/_ExpertProposals.cshtml";
            public readonly string _Form = "~/Views/Thread/_Form.cshtml";
            public readonly string _FormTiny = "~/Views/Thread/_FormTiny.cshtml";
            public readonly string _KeywordTilesItems = "~/Views/Thread/_KeywordTilesItems.cshtml";
            public readonly string _MultiExpertBox = "~/Views/Thread/_MultiExpertBox.cshtml";
            public readonly string _Post = "~/Views/Thread/_Post.cshtml";
            public readonly string _PostSanitize = "~/Views/Thread/_PostSanitize.cshtml";
            public readonly string _PriceProposalNotification = "~/Views/Thread/_PriceProposalNotification.cshtml";
            public readonly string _ProfileQuestionsItems = "~/Views/Thread/_ProfileQuestionsItems.cshtml";
            public readonly string _Question = "~/Views/Thread/_Question.cshtml";
            public readonly string _QuestionsListItems = "~/Views/Thread/_QuestionsListItems.cshtml";
            public readonly string _ReleaseTimer = "~/Views/Thread/_ReleaseTimer.cshtml";
            public readonly string _SatisfactionTable = "~/Views/Thread/_SatisfactionTable.cshtml";
            public readonly string _Thread = "~/Views/Thread/_Thread.cshtml";
            public readonly string _ThreadAcceptedNorification = "~/Views/Thread/_ThreadAcceptedNorification.cshtml";
            public readonly string _ThreadCategoryAttributes = "~/Views/Thread/_ThreadCategoryAttributes.cshtml";
            public readonly string _ThreadDetailsMenu = "~/Views/Thread/_ThreadDetailsMenu.cshtml";
            public readonly string _UnknownExpertBox = "~/Views/Thread/_UnknownExpertBox.cshtml";
            public readonly string _UserOverview = "~/Views/Thread/_UserOverview.cshtml";
            public readonly string _WarrantyFrame = "~/Views/Thread/_WarrantyFrame.cshtml";
            public readonly string AdditionalServiceInformation = "~/Views/Thread/AdditionalServiceInformation.cshtml";
            public readonly string AuthenticationTypeSelect = "~/Views/Thread/AuthenticationTypeSelect.cshtml";
            public readonly string AvailableQuestionList = "~/Views/Thread/AvailableQuestionList.cshtml";
            public readonly string CatalogQuestionList = "~/Views/Thread/CatalogQuestionList.cshtml";
            public readonly string CatalogThreadDetails = "~/Views/Thread/CatalogThreadDetails.cshtml";
            public readonly string CategoryAttributes = "~/Views/Thread/CategoryAttributes.cshtml";
            public readonly string CreateFeedback = "~/Views/Thread/CreateFeedback.cshtml";
            public readonly string GiveUp = "~/Views/Thread/GiveUp.cshtml";
            public readonly string IncreaseExpertValueForm = "~/Views/Thread/IncreaseExpertValueForm.cshtml";
            public readonly string ModeratorQuestionList = "~/Views/Thread/ModeratorQuestionList.cshtml";
            public readonly string Options = "~/Views/Thread/Options.cshtml";
            public readonly string PriceProposalForm = "~/Views/Thread/PriceProposalForm.cshtml";
            public readonly string ProposeAdditionalService = "~/Views/Thread/ProposeAdditionalService.cshtml";
            public readonly string ReportIssueForm = "~/Views/Thread/ReportIssueForm.cshtml";
            public readonly string SanitizationQuestionList = "~/Views/Thread/SanitizationQuestionList.cshtml";
            public readonly string ThreadDetailsForAuthor = "~/Views/Thread/ThreadDetailsForAuthor.cshtml";
            public readonly string ThreadDetailsForExperts = "~/Views/Thread/ThreadDetailsForExperts.cshtml";
            public readonly string ThreadDetailsForModerator = "~/Views/Thread/ThreadDetailsForModerator.cshtml";
            public readonly string ThreadDetailsForSanitization = "~/Views/Thread/ThreadDetailsForSanitization.cshtml";
            public readonly string UserDefinedPriceForm = "~/Views/Thread/UserDefinedPriceForm.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class T4MVC_ThreadController : Experts.Web.Controllers.ThreadController
    {
        public T4MVC_ThreadController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult CategoryAttributes(Experts.Web.Models.Forms.ThreadForm form, int? brokerId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CategoryAttributes);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ThreadForm", form);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "brokerId", brokerId);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ChildCategoryAttributes(Experts.Web.Models.Shared.AttributeValueModel[] attributeValues, int attributeId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ChildCategoryAttributes);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ThreadForm.AttributeValues", attributeValues);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "attributeId", attributeId);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Options(Experts.Web.Models.Forms.ThreadForm model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Options);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ThreadForm", model);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Options()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Options);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult CategoryAttributes()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CategoryAttributes);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult GetThreadValue(Experts.Web.Models.Forms.ThreadForm model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetThreadValue);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult GetThreadVerbocity(Experts.Web.Models.Forms.ThreadForm model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetThreadVerbocity);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Save(Experts.Web.Models.Forms.ThreadForm form)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Save);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "form", form);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult AvailableQuestionList(int? categoryId, string sortColumn, int? page)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AvailableQuestionList);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "categoryId", categoryId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "sortColumn", sortColumn);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "page", page);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult CatalogQuestionList(int? page)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CatalogQuestionList);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "page", page);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult SanitizationQuestionList(Experts.Core.Entities.ThreadSanitizationStatus? sanitizationStatus, MvcContrib.UI.Grid.GridSortOptions sortOptions, int? page)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SanitizationQuestionList);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "sanitizationStatus", sanitizationStatus);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "sortOptions", sortOptions);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "page", page);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ModeratorQuestionList(int? categoryId, MvcContrib.UI.Grid.GridSortOptions sortOptions, int? page)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ModeratorQuestionList);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "categoryId", categoryId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "sortOptions", sortOptions);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "page", page);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ThreadDetails(int threadId, Experts.Web.Models.Forms.PostForm postForm)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ThreadDetails);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "threadId", threadId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "postForm", postForm);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult CatalogThreadDetails(int threadId, string title)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CatalogThreadDetails);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "threadId", threadId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "title", title);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult UpdatePost(int postId, string postContent)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdatePost);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "postId", postId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "postContent", postContent);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ShowPost(Experts.Core.Entities.Post post, bool isCatalogMode, bool isSanitizationMode)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ShowPost);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "post", post);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "isCatalogMode", isCatalogMode);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "isSanitizationMode", isSanitizationMode);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Sanitization(int threadId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Sanitization);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "threadId", threadId);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult EditPublicSanitizedThreadTitle(Experts.Core.Entities.Thread model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EditPublicSanitizedThreadTitle);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "Thread", model);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult SanitizationUpdatePost(int postId, string postPublicContent)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SanitizationUpdatePost);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "postId", postId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "postPublicContent", postPublicContent);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult SanitizationUpdateThread(int threadId, Experts.Core.Entities.ThreadSanitizationStatus sanitizationStatus)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SanitizationUpdateThread);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "threadId", threadId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "sanitizationStatus", sanitizationStatus);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult TogglePostVisibility(int postId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.TogglePostVisibility);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "postId", postId);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ShowExpertInfo(Experts.Core.Entities.Thread thread)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ShowExpertInfo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "thread", thread);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult SingleExpertBox(int expertId, string title, int? categoryThreadId, bool showVerificationDetails, bool isEmbedded)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SingleExpertBox);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "expertId", expertId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "title", title);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "categoryThreadId", categoryThreadId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "showVerificationDetails", showVerificationDetails);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "isEmbedded", isEmbedded);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult MultiExpertBox(bool feedbacksVisible, int? categoryId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.MultiExpertBox);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "feedbacksVisible", feedbacksVisible);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "categoryId", categoryId);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult MultiExpertBoxData(int? categoryId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.MultiExpertBoxData);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "categoryId", categoryId);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ExpertInfo(int expertId, bool feedbacksVisible)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ExpertInfo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "expertId", expertId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "feedbacksVisible", feedbacksVisible);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult CreatePost(Experts.Web.Models.Forms.PostForm model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CreatePost);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "PostForm", model);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult GetAllPosts(int threadId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetAllPosts);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "threadId", threadId);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult GetPriceProposalNotification(int threadId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetPriceProposalNotification);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "threadId", threadId);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ShowPriceProposalNotification(Experts.Core.Entities.Thread thread)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ShowPriceProposalNotification);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "thread", thread);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult DateDifference(int threadId, long threadLastModDate)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DateDifference);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "threadId", threadId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "threadLastModDate", threadLastModDate);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult GetThreadDetailsMenu(int threadId, bool isModerator)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetThreadDetailsMenu);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "threadId", threadId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "isModerator", isModerator);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ShowThreadDetailsMenu(Experts.Core.Entities.Thread thread, bool isModerator, Experts.Core.Entities.Post post)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ShowThreadDetailsMenu);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "thread", thread);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "isModerator", isModerator);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "post", post);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult DirectQuestion(int expertId, int threadId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DirectQuestion);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "expertId", expertId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "threadId", threadId);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ReleaseReservedQuestion(int threadId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ReleaseReservedQuestion);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "threadId", threadId);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ThreadAttachmentUpload(int threadId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ThreadAttachmentUpload);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "threadId", threadId);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult PrecedingUpload(string temporaryAttachmentFolder)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PrecedingUpload);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "temporaryAttachmentFolder", temporaryAttachmentFolder);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult AttachmentTiles(string temporaryAttachmentFolder, bool isTiny, bool allowNoAttachments)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AttachmentTiles);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "temporaryAttachmentFolder", temporaryAttachmentFolder);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "isTiny", isTiny);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "allowNoAttachments", allowNoAttachments);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult DeleteAttachmentTile(string fileName, string temporaryAttachmentFolder)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteAttachmentTile);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "fileName", fileName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "temporaryAttachmentFolder", temporaryAttachmentFolder);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult GetTemporaryAttachmentsCount(string temporaryAttachmentFolder)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetTemporaryAttachmentsCount);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "temporaryAttachmentFolder", temporaryAttachmentFolder);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult GetAttachment(int attachmentId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetAttachment);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "attachmentId", attachmentId);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult DeletePost(int postId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeletePost);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "postId", postId);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult DeleteAttachment(int attachmentId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteAttachment);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "attachmentId", attachmentId);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult OccupyThread(int threadId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.OccupyThread);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "threadId", threadId);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ExtendOccupyThreadLockTime(int threadId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ExtendOccupyThreadLockTime);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "threadId", threadId);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult GiveUp(int threadId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GiveUp);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "threadId", threadId);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult GiveUp(Experts.Web.Models.Forms.GiveUpForm model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GiveUp);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult DeleteThread(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteThread);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult CreateFeedback(int threadId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CreateFeedback);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "threadId", threadId);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult CreateFeedbackForm(Experts.Web.Models.Forms.FeedbackForm form, int? threadId, bool skipAnswerFeedback)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CreateFeedbackForm);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "form", form);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "threadId", threadId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "skipAnswerFeedback", skipAnswerFeedback);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ReportIssueForm(int threadId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ReportIssueForm);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "threadId", threadId);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ReportIssue(Experts.Web.Models.Forms.ReportIssueForm form)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ReportIssue);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "form", form);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult CategoryExpertsOnlineInfo(int categoryId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CategoryExpertsOnlineInfo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "categoryId", categoryId);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult PriceProposalForm(int data, decimal defaultValue)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PriceProposalForm);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "data", data);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "defaultValue", defaultValue);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult PriceProposal(Experts.Web.Models.Forms.PriceProposalForm form)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PriceProposal);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "form", form);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult UserDefinedPriceForm(Experts.Web.Models.Forms.ThreadForm form)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UserDefinedPriceForm);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "form", form);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult UserDefinedPrice(Experts.Web.Models.Forms.UserDefinedPriceForm form)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UserDefinedPrice);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "form", form);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ProposeAdditionalService(int threadId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ProposeAdditionalService);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "threadId", threadId);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ProposeAdditionalService(Experts.Web.Models.Forms.AdditionalServiceForm form)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ProposeAdditionalService);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "form", form);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult AdditionalServiceInformation(int threadId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AdditionalServiceInformation);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "threadId", threadId);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult DeclineAdditionalService(int additionalServiceId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeclineAdditionalService);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "additionalServiceId", additionalServiceId);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult GetThreadDetailsByStatus(int threadId, int threadIntState)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetThreadDetailsByStatus);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "threadId", threadId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "threadIntState", threadIntState);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult IncreaseExpertValueForm(int threadId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.IncreaseExpertValueForm);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "threadId", threadId);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult IncreaseExpertValue(Experts.Web.Models.Forms.IncreaseExpertValueForm form)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.IncreaseExpertValue);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "form", form);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult DisplaySelectedCategoryAttributes(int threadId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DisplaySelectedCategoryAttributes);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "threadId", threadId);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Question(Experts.Web.Models.Forms.ThreadForm form)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Question);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "form", form);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591
