// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments
#pragma warning disable
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public static class MVC
{
    public static Experts.Web.Controllers.AccountController Account = new Experts.Web.Controllers.T4MVC_AccountController();
    public static Experts.Web.Controllers.AdministrationController Administration = new Experts.Web.Controllers.T4MVC_AdministrationController();
    public static Experts.Web.Controllers.BaseController Base = new Experts.Web.Controllers.T4MVC_BaseController();
    public static Experts.Web.Controllers.CatalogController Catalog = new Experts.Web.Controllers.T4MVC_CatalogController();
    public static Experts.Web.Controllers.ChatController Chat = new Experts.Web.Controllers.T4MVC_ChatController();
    public static Experts.Web.Controllers.DevelopmentController Development = new Experts.Web.Controllers.T4MVC_DevelopmentController();
    public static Experts.Web.Controllers.ErrorController Error = new Experts.Web.Controllers.T4MVC_ErrorController();
    public static Experts.Web.Controllers.LaunchController Launch = new Experts.Web.Controllers.T4MVC_LaunchController();
    public static Experts.Web.Controllers.LogController Log = new Experts.Web.Controllers.T4MVC_LogController();
    public static Experts.Web.Controllers.PaymentController Payment = new Experts.Web.Controllers.T4MVC_PaymentController();
    public static Experts.Web.Controllers.ProfileController Profile = new Experts.Web.Controllers.T4MVC_ProfileController();
    public static Experts.Web.Controllers.StaticPagesController StaticPages = new Experts.Web.Controllers.T4MVC_StaticPagesController();
    public static Experts.Web.Controllers.ThreadController Thread = new Experts.Web.Controllers.T4MVC_ThreadController();
    public static T4MVC.EmailsController Emails = new T4MVC.EmailsController();
    public static T4MVC.SharedController Shared = new T4MVC.SharedController();
}

namespace T4MVC
{
}

namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class Dummy
    {
        private Dummy() { }
        public static Dummy Instance = new Dummy();
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public class T4MVC_System_Web_Mvc_ActionResult : System.Web.Mvc.ActionResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_ActionResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
     
    public override void ExecuteResult(System.Web.Mvc.ControllerContext context) { }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}



namespace Links
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Scripts {
        private const string URLPATH = "~/Scripts";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class App {
            private const string URLPATH = "~/Scripts/App";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string Account_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Account.min.js") ? Url("Account.min.js") : Url("Account.js");
                          
            public static readonly string Administration_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Administration.min.js") ? Url("Administration.min.js") : Url("Administration.js");
                          
            public static readonly string Catalog_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Catalog.min.js") ? Url("Catalog.min.js") : Url("Catalog.js");
                          
            public static readonly string Chat_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Chat.min.js") ? Url("Chat.min.js") : Url("Chat.js");
                          
            public static readonly string ContinousPaging_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ContinousPaging.min.js") ? Url("ContinousPaging.min.js") : Url("ContinousPaging.js");
                          
            public static readonly string Editors_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Editors.min.js") ? Url("Editors.min.js") : Url("Editors.js");
                          
            public static readonly string Global_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Global.min.js") ? Url("Global.min.js") : Url("Global.js");
                          
            public static readonly string jQueryExtensions_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jQueryExtensions.min.js") ? Url("jQueryExtensions.min.js") : Url("jQueryExtensions.js");
                          
            public static readonly string Logger_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Logger.min.js") ? Url("Logger.min.js") : Url("Logger.js");
                          
            public static readonly string Paging_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Paging.min.js") ? Url("Paging.min.js") : Url("Paging.js");
                          
            public static readonly string Partner_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Partner.min.js") ? Url("Partner.min.js") : Url("Partner.js");
                          
            public static readonly string Payment_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Payment.min.js") ? Url("Payment.min.js") : Url("Payment.js");
                          
            public static readonly string Profile_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Profile.min.js") ? Url("Profile.min.js") : Url("Profile.js");
                          
            public static readonly string Selectbox_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Selectbox.min.js") ? Url("Selectbox.min.js") : Url("Selectbox.js");
                          
            public static readonly string Thread_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Thread.min.js") ? Url("Thread.min.js") : Url("Thread.js");
                          
            public static readonly string TinyForm_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/TinyForm.min.js") ? Url("TinyForm.min.js") : Url("TinyForm.js");
                          
        }
    
        public static readonly string application_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/application.min.js") ? Url("application.min.js") : Url("application.js");
                      
        public static readonly string bootstrap_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap.min.js") ? Url("bootstrap.min.js") : Url("bootstrap.js");
                      
        public static readonly string bootstrap_min_js = Url("bootstrap.min.js");
        public static readonly string fileupload_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fileupload.min.js") ? Url("fileupload.min.js") : Url("fileupload.js");
                      
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class jqPlot {
            private const string URLPATH = "~/Scripts/jqPlot";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string changes_txt = Url("changes.txt");
            public static readonly string copyright_txt = Url("copyright.txt");
            public static readonly string excanvas_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/excanvas.min.js") ? Url("excanvas.min.js") : Url("excanvas.js");
                          
            public static readonly string excanvas_min_js = Url("excanvas.min.js");
            public static readonly string gpl_2_0_txt = Url("gpl-2.0.txt");
            public static readonly string jqPlotCssStyling_txt = Url("jqPlotCssStyling.txt");
            public static readonly string jqPlotOptions_txt = Url("jqPlotOptions.txt");
            public static readonly string jquery_jqplot_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.jqplot.min.css") ? Url("jquery.jqplot.min.css") : Url("jquery.jqplot.css");
                 
            public static readonly string jquery_jqplot_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.jqplot.min.js") ? Url("jquery.jqplot.min.js") : Url("jquery.jqplot.js");
                          
            public static readonly string jquery_jqplot_min_css = Url("jquery.jqplot.min.css");
            public static readonly string jquery_jqplot_min_js = Url("jquery.jqplot.min.js");
            public static readonly string jquery_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.min.js") ? Url("jquery.min.js") : Url("jquery.js");
                          
            public static readonly string jquery_min_js = Url("jquery.min.js");
            public static readonly string MIT_LICENSE_txt = Url("MIT-LICENSE.txt");
            public static readonly string optionsTutorial_txt = Url("optionsTutorial.txt");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class plugins {
                private const string URLPATH = "~/Scripts/jqPlot/plugins";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string jqplot_barRenderer_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jqplot.barRenderer.min.js") ? Url("jqplot.barRenderer.min.js") : Url("jqplot.barRenderer.js");
                              
                public static readonly string jqplot_barRenderer_min_js = Url("jqplot.barRenderer.min.js");
                public static readonly string jqplot_BezierCurveRenderer_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jqplot.BezierCurveRenderer.min.js") ? Url("jqplot.BezierCurveRenderer.min.js") : Url("jqplot.BezierCurveRenderer.js");
                              
                public static readonly string jqplot_BezierCurveRenderer_min_js = Url("jqplot.BezierCurveRenderer.min.js");
                public static readonly string jqplot_blockRenderer_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jqplot.blockRenderer.min.js") ? Url("jqplot.blockRenderer.min.js") : Url("jqplot.blockRenderer.js");
                              
                public static readonly string jqplot_blockRenderer_min_js = Url("jqplot.blockRenderer.min.js");
                public static readonly string jqplot_bubbleRenderer_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jqplot.bubbleRenderer.min.js") ? Url("jqplot.bubbleRenderer.min.js") : Url("jqplot.bubbleRenderer.js");
                              
                public static readonly string jqplot_bubbleRenderer_min_js = Url("jqplot.bubbleRenderer.min.js");
                public static readonly string jqplot_canvasAxisLabelRenderer_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jqplot.canvasAxisLabelRenderer.min.js") ? Url("jqplot.canvasAxisLabelRenderer.min.js") : Url("jqplot.canvasAxisLabelRenderer.js");
                              
                public static readonly string jqplot_canvasAxisLabelRenderer_min_js = Url("jqplot.canvasAxisLabelRenderer.min.js");
                public static readonly string jqplot_canvasAxisTickRenderer_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jqplot.canvasAxisTickRenderer.min.js") ? Url("jqplot.canvasAxisTickRenderer.min.js") : Url("jqplot.canvasAxisTickRenderer.js");
                              
                public static readonly string jqplot_canvasAxisTickRenderer_min_js = Url("jqplot.canvasAxisTickRenderer.min.js");
                public static readonly string jqplot_canvasOverlay_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jqplot.canvasOverlay.min.js") ? Url("jqplot.canvasOverlay.min.js") : Url("jqplot.canvasOverlay.js");
                              
                public static readonly string jqplot_canvasOverlay_min_js = Url("jqplot.canvasOverlay.min.js");
                public static readonly string jqplot_canvasTextRenderer_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jqplot.canvasTextRenderer.min.js") ? Url("jqplot.canvasTextRenderer.min.js") : Url("jqplot.canvasTextRenderer.js");
                              
                public static readonly string jqplot_canvasTextRenderer_min_js = Url("jqplot.canvasTextRenderer.min.js");
                public static readonly string jqplot_categoryAxisRenderer_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jqplot.categoryAxisRenderer.min.js") ? Url("jqplot.categoryAxisRenderer.min.js") : Url("jqplot.categoryAxisRenderer.js");
                              
                public static readonly string jqplot_categoryAxisRenderer_min_js = Url("jqplot.categoryAxisRenderer.min.js");
                public static readonly string jqplot_ciParser_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jqplot.ciParser.min.js") ? Url("jqplot.ciParser.min.js") : Url("jqplot.ciParser.js");
                              
                public static readonly string jqplot_ciParser_min_js = Url("jqplot.ciParser.min.js");
                public static readonly string jqplot_cursor_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jqplot.cursor.min.js") ? Url("jqplot.cursor.min.js") : Url("jqplot.cursor.js");
                              
                public static readonly string jqplot_cursor_min_js = Url("jqplot.cursor.min.js");
                public static readonly string jqplot_dateAxisRenderer_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jqplot.dateAxisRenderer.min.js") ? Url("jqplot.dateAxisRenderer.min.js") : Url("jqplot.dateAxisRenderer.js");
                              
                public static readonly string jqplot_dateAxisRenderer_min_js = Url("jqplot.dateAxisRenderer.min.js");
                public static readonly string jqplot_donutRenderer_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jqplot.donutRenderer.min.js") ? Url("jqplot.donutRenderer.min.js") : Url("jqplot.donutRenderer.js");
                              
                public static readonly string jqplot_donutRenderer_min_js = Url("jqplot.donutRenderer.min.js");
                public static readonly string jqplot_dragable_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jqplot.dragable.min.js") ? Url("jqplot.dragable.min.js") : Url("jqplot.dragable.js");
                              
                public static readonly string jqplot_dragable_min_js = Url("jqplot.dragable.min.js");
                public static readonly string jqplot_enhancedLegendRenderer_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jqplot.enhancedLegendRenderer.min.js") ? Url("jqplot.enhancedLegendRenderer.min.js") : Url("jqplot.enhancedLegendRenderer.js");
                              
                public static readonly string jqplot_enhancedLegendRenderer_min_js = Url("jqplot.enhancedLegendRenderer.min.js");
                public static readonly string jqplot_funnelRenderer_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jqplot.funnelRenderer.min.js") ? Url("jqplot.funnelRenderer.min.js") : Url("jqplot.funnelRenderer.js");
                              
                public static readonly string jqplot_funnelRenderer_min_js = Url("jqplot.funnelRenderer.min.js");
                public static readonly string jqplot_highlighter_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jqplot.highlighter.min.js") ? Url("jqplot.highlighter.min.js") : Url("jqplot.highlighter.js");
                              
                public static readonly string jqplot_highlighter_min_js = Url("jqplot.highlighter.min.js");
                public static readonly string jqplot_json2_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jqplot.min.json2.min.js") ? Url("jqplot.min.json2.min.js") : Url("jqplot.json2.js");
                              
                public static readonly string jqplot_json2_min_js = Url("jqplot.json2.min.js");
                public static readonly string jqplot_logAxisRenderer_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jqplot.logAxisRenderer.min.js") ? Url("jqplot.logAxisRenderer.min.js") : Url("jqplot.logAxisRenderer.js");
                              
                public static readonly string jqplot_logAxisRenderer_min_js = Url("jqplot.logAxisRenderer.min.js");
                public static readonly string jqplot_mekkoAxisRenderer_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jqplot.mekkoAxisRenderer.min.js") ? Url("jqplot.mekkoAxisRenderer.min.js") : Url("jqplot.mekkoAxisRenderer.js");
                              
                public static readonly string jqplot_mekkoAxisRenderer_min_js = Url("jqplot.mekkoAxisRenderer.min.js");
                public static readonly string jqplot_mekkoRenderer_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jqplot.mekkoRenderer.min.js") ? Url("jqplot.mekkoRenderer.min.js") : Url("jqplot.mekkoRenderer.js");
                              
                public static readonly string jqplot_mekkoRenderer_min_js = Url("jqplot.mekkoRenderer.min.js");
                public static readonly string jqplot_meterGaugeRenderer_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jqplot.meterGaugeRenderer.min.js") ? Url("jqplot.meterGaugeRenderer.min.js") : Url("jqplot.meterGaugeRenderer.js");
                              
                public static readonly string jqplot_meterGaugeRenderer_min_js = Url("jqplot.meterGaugeRenderer.min.js");
                public static readonly string jqplot_ohlcRenderer_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jqplot.ohlcRenderer.min.js") ? Url("jqplot.ohlcRenderer.min.js") : Url("jqplot.ohlcRenderer.js");
                              
                public static readonly string jqplot_ohlcRenderer_min_js = Url("jqplot.ohlcRenderer.min.js");
                public static readonly string jqplot_pieRenderer_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jqplot.pieRenderer.min.js") ? Url("jqplot.pieRenderer.min.js") : Url("jqplot.pieRenderer.js");
                              
                public static readonly string jqplot_pieRenderer_min_js = Url("jqplot.pieRenderer.min.js");
                public static readonly string jqplot_pointLabels_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jqplot.pointLabels.min.js") ? Url("jqplot.pointLabels.min.js") : Url("jqplot.pointLabels.js");
                              
                public static readonly string jqplot_pointLabels_min_js = Url("jqplot.pointLabels.min.js");
                public static readonly string jqplot_pyramidAxisRenderer_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jqplot.pyramidAxisRenderer.min.js") ? Url("jqplot.pyramidAxisRenderer.min.js") : Url("jqplot.pyramidAxisRenderer.js");
                              
                public static readonly string jqplot_pyramidAxisRenderer_min_js = Url("jqplot.pyramidAxisRenderer.min.js");
                public static readonly string jqplot_pyramidGridRenderer_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jqplot.pyramidGridRenderer.min.js") ? Url("jqplot.pyramidGridRenderer.min.js") : Url("jqplot.pyramidGridRenderer.js");
                              
                public static readonly string jqplot_pyramidGridRenderer_min_js = Url("jqplot.pyramidGridRenderer.min.js");
                public static readonly string jqplot_pyramidRenderer_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jqplot.pyramidRenderer.min.js") ? Url("jqplot.pyramidRenderer.min.js") : Url("jqplot.pyramidRenderer.js");
                              
                public static readonly string jqplot_pyramidRenderer_min_js = Url("jqplot.pyramidRenderer.min.js");
                public static readonly string jqplot_trendline_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jqplot.trendline.min.js") ? Url("jqplot.trendline.min.js") : Url("jqplot.trendline.js");
                              
                public static readonly string jqplot_trendline_min_js = Url("jqplot.trendline.min.js");
            }
        
            public static readonly string README_txt = Url("README.txt");
            public static readonly string usage_txt = Url("usage.txt");
        }
    
        public static readonly string jquery_1_8_1_vsdoc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-1.8.1-vsdoc.min.js") ? Url("jquery-1.8.1-vsdoc.min.js") : Url("jquery-1.8.1-vsdoc.js");
                      
        public static readonly string jquery_1_8_1_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-1.8.1.min.js") ? Url("jquery-1.8.1.min.js") : Url("jquery-1.8.1.js");
                      
        public static readonly string jquery_1_8_1_min_js = Url("jquery-1.8.1.min.js");
        public static readonly string jquery_ui_1_8_23_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-ui-1.8.23.min.js") ? Url("jquery-ui-1.8.23.min.js") : Url("jquery-ui-1.8.23.js");
                      
        public static readonly string jquery_ui_1_8_23_min_js = Url("jquery-ui-1.8.23.min.js");
        public static readonly string jquery_cookie_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.cookie.min.js") ? Url("jquery.cookie.min.js") : Url("jquery.cookie.js");
                      
        public static readonly string jquery_countdown_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.countdown.min.js") ? Url("jquery.countdown.min.js") : Url("jquery.countdown.js");
                      
        public static readonly string jquery_dropkick_1_0_0_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.dropkick-1.0.0.min.js") ? Url("jquery.dropkick-1.0.0.min.js") : Url("jquery.dropkick-1.0.0.js");
                      
        public static readonly string jquery_hoverIntent_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.hoverIntent.min.js") ? Url("jquery.hoverIntent.min.js") : Url("jquery.hoverIntent.js");
                      
        public static readonly string jquery_hoverIntent_min_js = Url("jquery.hoverIntent.min.js");
        public static readonly string jquery_mvccontrib_grid_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.mvccontrib.grid.min.js") ? Url("jquery.mvccontrib.grid.min.js") : Url("jquery.mvccontrib.grid.js");
                      
        public static readonly string jquery_mvccontrib_grid_min_js = Url("jquery.mvccontrib.grid.min.js");
        public static readonly string jquery_selectbox_0_2_min_js = Url("jquery.selectbox-0.2.min.js");
        public static readonly string jquery_textareaAutoResize_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.textareaAutoResize.min.js") ? Url("jquery.textareaAutoResize.min.js") : Url("jquery.textareaAutoResize.js");
                      
        public static readonly string jquery_unobtrusive_ajax_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.unobtrusive-ajax.min.js") ? Url("jquery.unobtrusive-ajax.min.js") : Url("jquery.unobtrusive-ajax.js");
                      
        public static readonly string jquery_unobtrusive_ajax_min_js = Url("jquery.unobtrusive-ajax.min.js");
        public static readonly string jquery_validate_vsdoc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate-vsdoc.min.js") ? Url("jquery.validate-vsdoc.min.js") : Url("jquery.validate-vsdoc.js");
                      
        public static readonly string jquery_validate_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate.min.js") ? Url("jquery.validate.min.js") : Url("jquery.validate.js");
                      
        public static readonly string jquery_validate_min_js = Url("jquery.validate.min.js");
        public static readonly string jquery_validate_unobtrusive_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate.unobtrusive.min.js") ? Url("jquery.validate.unobtrusive.min.js") : Url("jquery.validate.unobtrusive.js");
                      
        public static readonly string jquery_validate_unobtrusive_min_js = Url("jquery.validate.unobtrusive.min.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class jsUploader {
            private const string URLPATH = "~/Scripts/jsUploader";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string jquery_fileupload_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.fileupload.min.js") ? Url("jquery.fileupload.min.js") : Url("jquery.fileupload.js");
                          
            public static readonly string jquery_iframe_transport_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.iframe-transport.min.js") ? Url("jquery.iframe-transport.min.js") : Url("jquery.iframe-transport.js");
                          
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class vendor {
                private const string URLPATH = "~/Scripts/jsUploader/vendor";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string jquery_ui_widget_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.widget.min.js") ? Url("jquery.ui.widget.min.js") : Url("jquery.ui.widget.js");
                              
            }
        
        }
    
        public static readonly string MicrosoftAjax_debug_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/MicrosoftAjax.debug.min.js") ? Url("MicrosoftAjax.debug.min.js") : Url("MicrosoftAjax.debug.js");
                      
        public static readonly string MicrosoftAjax_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/MicrosoftAjax.min.js") ? Url("MicrosoftAjax.min.js") : Url("MicrosoftAjax.js");
                      
        public static readonly string MicrosoftMvcAjax_debug_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/MicrosoftMvcAjax.debug.min.js") ? Url("MicrosoftMvcAjax.debug.min.js") : Url("MicrosoftMvcAjax.debug.js");
                      
        public static readonly string MicrosoftMvcAjax_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/MicrosoftMvcAjax.min.js") ? Url("MicrosoftMvcAjax.min.js") : Url("MicrosoftMvcAjax.js");
                      
        public static readonly string MicrosoftMvcValidation_debug_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/MicrosoftMvcValidation.debug.min.js") ? Url("MicrosoftMvcValidation.debug.min.js") : Url("MicrosoftMvcValidation.debug.js");
                      
        public static readonly string MicrosoftMvcValidation_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/MicrosoftMvcValidation.min.js") ? Url("MicrosoftMvcValidation.min.js") : Url("MicrosoftMvcValidation.js");
                      
        public static readonly string modernizr_2_6_2_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/modernizr-2.6.2.min.js") ? Url("modernizr-2.6.2.min.js") : Url("modernizr-2.6.2.js");
                      
        public static readonly string moment_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/moment.min.js") ? Url("moment.min.js") : Url("moment.js");
                      
        public static readonly string moment_min_js = Url("moment.min.js");
        public static readonly string paging_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/paging.min.js") ? Url("paging.min.js") : Url("paging.js");
                      
        public static readonly string superfish_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/superfish.min.js") ? Url("superfish.min.js") : Url("superfish.js");
                      
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Content {
        private const string URLPATH = "~/Content";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        public static readonly string application_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/application.min.css") ? Url("application.min.css") : Url("application.css");
             
        public static readonly string bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap.min.css") ? Url("bootstrap.min.css") : Url("bootstrap.css");
             
        public static readonly string bootstrap_custom_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap.custom.min.css") ? Url("bootstrap.custom.min.css") : Url("bootstrap.custom.css");
             
        public static readonly string bootstrap_min_css = Url("bootstrap.min.css");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class fancybox {
            private const string URLPATH = "~/Content/fancybox";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string blank_gif = Url("blank.gif");
            public static readonly string fancy_close_png = Url("fancy_close.png");
            public static readonly string fancy_loading_png = Url("fancy_loading.png");
            public static readonly string fancy_nav_left_png = Url("fancy_nav_left.png");
            public static readonly string fancy_nav_right_png = Url("fancy_nav_right.png");
            public static readonly string fancy_shadow_e_png = Url("fancy_shadow_e.png");
            public static readonly string fancy_shadow_n_png = Url("fancy_shadow_n.png");
            public static readonly string fancy_shadow_ne_png = Url("fancy_shadow_ne.png");
            public static readonly string fancy_shadow_nw_png = Url("fancy_shadow_nw.png");
            public static readonly string fancy_shadow_s_png = Url("fancy_shadow_s.png");
            public static readonly string fancy_shadow_se_png = Url("fancy_shadow_se.png");
            public static readonly string fancy_shadow_sw_png = Url("fancy_shadow_sw.png");
            public static readonly string fancy_shadow_w_png = Url("fancy_shadow_w.png");
            public static readonly string fancy_title_left_png = Url("fancy_title_left.png");
            public static readonly string fancy_title_main_png = Url("fancy_title_main.png");
            public static readonly string fancy_title_over_png = Url("fancy_title_over.png");
            public static readonly string fancy_title_right_png = Url("fancy_title_right.png");
            public static readonly string fancybox_x_png = Url("fancybox-x.png");
            public static readonly string fancybox_y_png = Url("fancybox-y.png");
            public static readonly string fancybox_png = Url("fancybox.png");
            public static readonly string jquery_easing_1_3_pack_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.easing-1.3.pack.min.js") ? Url("jquery.easing-1.3.pack.min.js") : Url("jquery.easing-1.3.pack.js");
                          
            public static readonly string jquery_fancybox_1_3_4_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.fancybox-1.3.4.min.css") ? Url("jquery.fancybox-1.3.4.min.css") : Url("jquery.fancybox-1.3.4.css");
                 
            public static readonly string jquery_fancybox_1_3_4_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.fancybox-1.3.4.min.js") ? Url("jquery.fancybox-1.3.4.min.js") : Url("jquery.fancybox-1.3.4.js");
                          
            public static readonly string jquery_fancybox_1_3_4_pack_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.fancybox-1.3.4.pack.min.js") ? Url("jquery.fancybox-1.3.4.pack.min.js") : Url("jquery.fancybox-1.3.4.pack.js");
                          
            public static readonly string jquery_mousewheel_3_0_4_pack_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.mousewheel-3.0.4.pack.min.js") ? Url("jquery.mousewheel-3.0.4.pack.min.js") : Url("jquery.mousewheel-3.0.4.pack.js");
                          
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class fonts {
            private const string URLPATH = "~/Content/fonts";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class DroidSans {
                private const string URLPATH = "~/Content/fonts/DroidSans";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string DroidSans_Bold_webfont_eot = Url("DroidSans-Bold-webfont.eot");
                public static readonly string DroidSans_Bold_webfont_svg = Url("DroidSans-Bold-webfont.svg");
                public static readonly string DroidSans_Bold_webfont_ttf = Url("DroidSans-Bold-webfont.ttf");
                public static readonly string DroidSans_Bold_webfont_woff = Url("DroidSans-Bold-webfont.woff");
                public static readonly string DroidSans_webfont_eot = Url("DroidSans-webfont.eot");
                public static readonly string DroidSans_webfont_svg = Url("DroidSans-webfont.svg");
                public static readonly string DroidSans_webfont_ttf = Url("DroidSans-webfont.ttf");
                public static readonly string DroidSans_webfont_woff = Url("DroidSans-webfont.woff");
                public static readonly string stylesheet_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/stylesheet.min.css") ? Url("stylesheet.min.css") : Url("stylesheet.css");
                     
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class FontAwesome {
                private const string URLPATH = "~/Content/fonts/FontAwesome";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string font_awesome_ie7_min_css = Url("font-awesome-ie7.min.css");
                public static readonly string font_awesome_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/font-awesome.min.css") ? Url("font-awesome.min.css") : Url("font-awesome.css");
                     
                public static readonly string font_awesome_min_css = Url("font-awesome.min.css");
                public static readonly string fontawesome_webfont_eot = Url("fontawesome-webfont.eot");
                public static readonly string fontawesome_webfont_ttf = Url("fontawesome-webfont.ttf");
                public static readonly string fontawesome_webfont_woff = Url("fontawesome-webfont.woff");
                public static readonly string FontAwesome_otf = Url("FontAwesome.otf");
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class images {
            private const string URLPATH = "~/Content/images";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string ajax_loader_small_gif = Url("ajax-loader-small.gif");
            public static readonly string ajax_loader_gif = Url("ajax-loader.gif");
            public static readonly string become_expert_frame_page_png = Url("become-expert-frame-page.png");
            public static readonly string become_expert_frame_tick_png = Url("become-expert-frame-tick.png");
            public static readonly string become_expert_frame_user_png = Url("become-expert-frame-user.png");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class categories {
                private const string URLPATH = "~/Content/images/categories";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string _10big_png = Url("10big.png");
                public static readonly string _10small_png = Url("10small.png");
                public static readonly string _10tiny_png = Url("10tiny.png");
                public static readonly string _11big_png = Url("11big.png");
                public static readonly string _11small_png = Url("11small.png");
                public static readonly string _11tiny_png = Url("11tiny.png");
                public static readonly string _12big_png = Url("12big.png");
                public static readonly string _12small_png = Url("12small.png");
                public static readonly string _12tiny_png = Url("12tiny.png");
                public static readonly string _13big_png = Url("13big.png");
                public static readonly string _13small_png = Url("13small.png");
                public static readonly string _13tiny_png = Url("13tiny.png");
                public static readonly string _14big_png = Url("14big.png");
                public static readonly string _14small_png = Url("14small.png");
                public static readonly string _14tiny_png = Url("14tiny.png");
                public static readonly string _15big_png = Url("15big.png");
                public static readonly string _15small_png = Url("15small.png");
                public static readonly string _15tiny_png = Url("15tiny.png");
                public static readonly string _16big_png = Url("16big.png");
                public static readonly string _16small_png = Url("16small.png");
                public static readonly string _16tiny_png = Url("16tiny.png");
                public static readonly string _17big_png = Url("17big.png");
                public static readonly string _17small_png = Url("17small.png");
                public static readonly string _17tiny_png = Url("17tiny.png");
                public static readonly string _18big_png = Url("18big.png");
                public static readonly string _18small_png = Url("18small.png");
                public static readonly string _18tiny_png = Url("18tiny.png");
                public static readonly string _1big_png = Url("1big.png");
                public static readonly string _1small_png = Url("1small.png");
                public static readonly string _1tiny_png = Url("1tiny.png");
                public static readonly string _2big_png = Url("2big.png");
                public static readonly string _2small_png = Url("2small.png");
                public static readonly string _2tiny_png = Url("2tiny.png");
                public static readonly string _3big_png = Url("3big.png");
                public static readonly string _3small_png = Url("3small.png");
                public static readonly string _3tiny_png = Url("3tiny.png");
                public static readonly string _4big_png = Url("4big.png");
                public static readonly string _4small_png = Url("4small.png");
                public static readonly string _4tiny_png = Url("4tiny.png");
                public static readonly string _5big_png = Url("5big.png");
                public static readonly string _5small_png = Url("5small.png");
                public static readonly string _5tiny_png = Url("5tiny.png");
                public static readonly string _6big_png = Url("6big.png");
                public static readonly string _6small_png = Url("6small.png");
                public static readonly string _6tiny_png = Url("6tiny.png");
                public static readonly string _7big_png = Url("7big.png");
                public static readonly string _7small_png = Url("7small.png");
                public static readonly string _7tiny_png = Url("7tiny.png");
                public static readonly string _8big_png = Url("8big.png");
                public static readonly string _8small_png = Url("8small.png");
                public static readonly string _8tiny_png = Url("8tiny.png");
                public static readonly string _9big_png = Url("9big.png");
                public static readonly string _9small_png = Url("9small.png");
                public static readonly string _9tiny_png = Url("9tiny.png");
                public static readonly string more_png = Url("more.png");
            }
        
            public static readonly string consultant_png = Url("consultant.png");
            public static readonly string expert_verified_64_64_png = Url("expert_verified_64_64.png");
            public static readonly string experts_jpg = Url("experts.jpg");
            public static readonly string favicon_ico = Url("favicon.ico");
            public static readonly string feedback_icons_small_png = Url("feedback-icons-small.png");
            public static readonly string feedback_icons_png = Url("feedback-icons.png");
            public static readonly string frame_arrow_down_png = Url("frame-arrow-down.png");
            public static readonly string glyphicons_halflings_white_png = Url("glyphicons-halflings-white.png");
            public static readonly string glyphicons_halflings_png = Url("glyphicons-halflings.png");
            public static readonly string gorrion_png = Url("gorrion.png");
            public static readonly string hint_tail_png = Url("hint-tail.png");
            public static readonly string icon_lock_png = Url("icon-lock.png");
            public static readonly string icon_user_png = Url("icon-user.png");
            public static readonly string logo_partners_jpg = Url("logo-partners.jpg");
            public static readonly string logo_png = Url("logo.png");
            public static readonly string meet_asknuts_jpg = Url("meet-asknuts.jpg");
            public static readonly string negative_mark_png = Url("negative-mark.png");
            public static readonly string neutral_mark_png = Url("neutral-mark.png");
            public static readonly string positive_mark_png = Url("positive-mark.png");
            public static readonly string slider_arrow_png = Url("slider-arrow.png");
            public static readonly string spacer_png = Url("spacer.png");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class thumbs {
                private const string URLPATH = "~/Content/images/thumbs";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string Negative_thumbs_big_png = Url("Negative-thumbs-big.png");
                public static readonly string Negative_thumbs_png = Url("Negative-thumbs.png");
                public static readonly string Neutral_thumbs_big_png = Url("Neutral-thumbs-big.png");
                public static readonly string Neutral_thumbs_png = Url("Neutral-thumbs.png");
                public static readonly string Positive_thumbs_big_png = Url("Positive-thumbs-big.png");
                public static readonly string Positive_thumbs_png = Url("Positive-thumbs.png");
            }
        
            public static readonly string user_logo_64_64_png = Url("user_logo_64_64.png");
            public static readonly string warranty_png = Url("warranty.png");
        }
    
        public static readonly string jquery_ui_custom_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-ui.custom.min.css") ? Url("jquery-ui.custom.min.css") : Url("jquery-ui.custom.css");
             
        public static readonly string jquery_selectbox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.selectbox.min.css") ? Url("jquery.selectbox.min.css") : Url("jquery.selectbox.css");
             
        public static readonly string Launch_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Launch.min.css") ? Url("Launch.min.css") : Url("Launch.css");
             
        public static readonly string Site_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Site.min.css") ? Url("Site.min.css") : Url("Site.css");
             
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class themes {
            private const string URLPATH = "~/Content/themes";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class @base {
                private const string URLPATH = "~/Content/themes/base";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class images {
                    private const string URLPATH = "~/Content/themes/base/images";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string ui_bg_flat_0_aaaaaa_40x100_png = Url("ui-bg_flat_0_aaaaaa_40x100.png");
                    public static readonly string ui_bg_flat_75_ffffff_40x100_png = Url("ui-bg_flat_75_ffffff_40x100.png");
                    public static readonly string ui_bg_glass_55_fbf9ee_1x400_png = Url("ui-bg_glass_55_fbf9ee_1x400.png");
                    public static readonly string ui_bg_glass_65_ffffff_1x400_png = Url("ui-bg_glass_65_ffffff_1x400.png");
                    public static readonly string ui_bg_glass_75_dadada_1x400_png = Url("ui-bg_glass_75_dadada_1x400.png");
                    public static readonly string ui_bg_glass_75_e6e6e6_1x400_png = Url("ui-bg_glass_75_e6e6e6_1x400.png");
                    public static readonly string ui_bg_glass_95_fef1ec_1x400_png = Url("ui-bg_glass_95_fef1ec_1x400.png");
                    public static readonly string ui_bg_highlight_soft_75_cccccc_1x100_png = Url("ui-bg_highlight-soft_75_cccccc_1x100.png");
                    public static readonly string ui_icons_222222_256x240_png = Url("ui-icons_222222_256x240.png");
                    public static readonly string ui_icons_2e83ff_256x240_png = Url("ui-icons_2e83ff_256x240.png");
                    public static readonly string ui_icons_454545_256x240_png = Url("ui-icons_454545_256x240.png");
                    public static readonly string ui_icons_888888_256x240_png = Url("ui-icons_888888_256x240.png");
                    public static readonly string ui_icons_cd0a0a_256x240_png = Url("ui-icons_cd0a0a_256x240.png");
                }
            
                public static readonly string jquery_ui_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-ui.min.css") ? Url("jquery-ui.min.css") : Url("jquery-ui.css");
                     
                public static readonly string jquery_ui_accordion_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.accordion.min.css") ? Url("jquery.ui.accordion.min.css") : Url("jquery.ui.accordion.css");
                     
                public static readonly string jquery_ui_all_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.all.min.css") ? Url("jquery.ui.all.min.css") : Url("jquery.ui.all.css");
                     
                public static readonly string jquery_ui_autocomplete_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.autocomplete.min.css") ? Url("jquery.ui.autocomplete.min.css") : Url("jquery.ui.autocomplete.css");
                     
                public static readonly string jquery_ui_base_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.base.min.css") ? Url("jquery.ui.base.min.css") : Url("jquery.ui.base.css");
                     
                public static readonly string jquery_ui_button_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.button.min.css") ? Url("jquery.ui.button.min.css") : Url("jquery.ui.button.css");
                     
                public static readonly string jquery_ui_core_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.core.min.css") ? Url("jquery.ui.core.min.css") : Url("jquery.ui.core.css");
                     
                public static readonly string jquery_ui_datepicker_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.datepicker.min.css") ? Url("jquery.ui.datepicker.min.css") : Url("jquery.ui.datepicker.css");
                     
                public static readonly string jquery_ui_dialog_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.dialog.min.css") ? Url("jquery.ui.dialog.min.css") : Url("jquery.ui.dialog.css");
                     
                public static readonly string jquery_ui_progressbar_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.progressbar.min.css") ? Url("jquery.ui.progressbar.min.css") : Url("jquery.ui.progressbar.css");
                     
                public static readonly string jquery_ui_resizable_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.resizable.min.css") ? Url("jquery.ui.resizable.min.css") : Url("jquery.ui.resizable.css");
                     
                public static readonly string jquery_ui_selectable_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.selectable.min.css") ? Url("jquery.ui.selectable.min.css") : Url("jquery.ui.selectable.css");
                     
                public static readonly string jquery_ui_slider_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.slider.min.css") ? Url("jquery.ui.slider.min.css") : Url("jquery.ui.slider.css");
                     
                public static readonly string jquery_ui_tabs_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.tabs.min.css") ? Url("jquery.ui.tabs.min.css") : Url("jquery.ui.tabs.css");
                     
                public static readonly string jquery_ui_theme_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.theme.min.css") ? Url("jquery.ui.theme.min.css") : Url("jquery.ui.theme.css");
                     
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class minified {
                    private const string URLPATH = "~/Content/themes/base/minified";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        private const string URLPATH = "~/Content/themes/base/minified/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string ui_bg_flat_0_aaaaaa_40x100_png = Url("ui-bg_flat_0_aaaaaa_40x100.png");
                        public static readonly string ui_bg_flat_75_ffffff_40x100_png = Url("ui-bg_flat_75_ffffff_40x100.png");
                        public static readonly string ui_bg_glass_55_fbf9ee_1x400_png = Url("ui-bg_glass_55_fbf9ee_1x400.png");
                        public static readonly string ui_bg_glass_65_ffffff_1x400_png = Url("ui-bg_glass_65_ffffff_1x400.png");
                        public static readonly string ui_bg_glass_75_dadada_1x400_png = Url("ui-bg_glass_75_dadada_1x400.png");
                        public static readonly string ui_bg_glass_75_e6e6e6_1x400_png = Url("ui-bg_glass_75_e6e6e6_1x400.png");
                        public static readonly string ui_bg_glass_95_fef1ec_1x400_png = Url("ui-bg_glass_95_fef1ec_1x400.png");
                        public static readonly string ui_bg_highlight_soft_75_cccccc_1x100_png = Url("ui-bg_highlight-soft_75_cccccc_1x100.png");
                        public static readonly string ui_icons_222222_256x240_png = Url("ui-icons_222222_256x240.png");
                        public static readonly string ui_icons_2e83ff_256x240_png = Url("ui-icons_2e83ff_256x240.png");
                        public static readonly string ui_icons_454545_256x240_png = Url("ui-icons_454545_256x240.png");
                        public static readonly string ui_icons_888888_256x240_png = Url("ui-icons_888888_256x240.png");
                        public static readonly string ui_icons_cd0a0a_256x240_png = Url("ui-icons_cd0a0a_256x240.png");
                    }
                
                    public static readonly string jquery_ui_min_css = Url("jquery-ui.min.css");
                    public static readonly string jquery_ui_accordion_min_css = Url("jquery.ui.accordion.min.css");
                    public static readonly string jquery_ui_autocomplete_min_css = Url("jquery.ui.autocomplete.min.css");
                    public static readonly string jquery_ui_button_min_css = Url("jquery.ui.button.min.css");
                    public static readonly string jquery_ui_core_min_css = Url("jquery.ui.core.min.css");
                    public static readonly string jquery_ui_datepicker_min_css = Url("jquery.ui.datepicker.min.css");
                    public static readonly string jquery_ui_dialog_min_css = Url("jquery.ui.dialog.min.css");
                    public static readonly string jquery_ui_progressbar_min_css = Url("jquery.ui.progressbar.min.css");
                    public static readonly string jquery_ui_resizable_min_css = Url("jquery.ui.resizable.min.css");
                    public static readonly string jquery_ui_selectable_min_css = Url("jquery.ui.selectable.min.css");
                    public static readonly string jquery_ui_slider_min_css = Url("jquery.ui.slider.min.css");
                    public static readonly string jquery_ui_tabs_min_css = Url("jquery.ui.tabs.min.css");
                    public static readonly string jquery_ui_theme_min_css = Url("jquery.ui.theme.min.css");
                }
            
            }
        
        }
    
        public static readonly string Widget_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Widget.min.css") ? Url("Widget.min.css") : Url("Widget.css");
             
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static partial class Bundles
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static partial class Scripts {}
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static partial class Styles {}
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public static class T4MVCHelpers {
    // You can change the ProcessVirtualPath method to modify the path that gets returned to the client.
    // e.g. you can prepend a domain, or append a query string:
    //      return "http://localhost" + path + "?foo=bar";
    private static string ProcessVirtualPathDefault(string virtualPath) {
        // The path that comes in starts with ~/ and must first be made absolute
        string path = VirtualPathUtility.ToAbsolute(virtualPath);
        
        // Add your own modifications here before returning the path
        return path;
    }

    // Calling ProcessVirtualPath through delegate to allow it to be replaced for unit testing
    public static Func<string, string> ProcessVirtualPath = ProcessVirtualPathDefault;


    // Logic to determine if the app is running in production or dev environment
    public static bool IsProduction() { 
        return (HttpContext.Current != null && !HttpContext.Current.IsDebuggingEnabled); 
    }
}





#endregion T4MVC
#pragma warning restore 1591


