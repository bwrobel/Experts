// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments
#pragma warning disable
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace Experts.Web.Controllers
{
    public partial class ChatController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ChatController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected ChatController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult ModeratorChatList()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ModeratorChatList);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult UserChatList()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UserChatList);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Support()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Support);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult Chat()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Chat);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult SetChatEmail()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetChatEmail);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult CreateMessage()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CreateMessage);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult CloseChat()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CloseChat);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult SendMessage()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SendMessage);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult SetChatFrameState()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetChatFrameState);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ChatController Actions { get { return MVC.Chat; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Chat";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Chat";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string ChatsOverview = "ChatsOverview";
            public readonly string ModeratorChatList = "ModeratorChatList";
            public readonly string UserChatList = "UserChatList";
            public readonly string Support = "Support";
            public readonly string ChatFrame = "ChatFrame";
            public readonly string Chat = "Chat";
            public readonly string SetChatEmail = "SetChatEmail";
            public readonly string CreateMessage = "CreateMessage";
            public readonly string CloseChat = "CloseChat";
            public readonly string SendMessage = "SendMessage";
            public readonly string GetRecentMessages = "GetRecentMessages";
            public readonly string FinishChat = "FinishChat";
            public readonly string SetChatFrameState = "SetChatFrameState";
            public readonly string MarkChatMessagesRead = "MarkChatMessagesRead";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string ChatsOverview = "ChatsOverview";
            public const string ModeratorChatList = "ModeratorChatList";
            public const string UserChatList = "UserChatList";
            public const string Support = "Support";
            public const string ChatFrame = "ChatFrame";
            public const string Chat = "Chat";
            public const string SetChatEmail = "SetChatEmail";
            public const string CreateMessage = "CreateMessage";
            public const string CloseChat = "CloseChat";
            public const string SendMessage = "SendMessage";
            public const string GetRecentMessages = "GetRecentMessages";
            public const string FinishChat = "FinishChat";
            public const string SetChatFrameState = "SetChatFrameState";
            public const string MarkChatMessagesRead = "MarkChatMessagesRead";
        }


        static readonly ActionParamsClass_ChatsOverview s_params_ChatsOverview = new ActionParamsClass_ChatsOverview();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ChatsOverview ChatsOverviewParams { get { return s_params_ChatsOverview; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ChatsOverview
        {
            public readonly string page = "page";
            public readonly string filter = "filter";
        }
        static readonly ActionParamsClass_ModeratorChatList s_params_ModeratorChatList = new ActionParamsClass_ModeratorChatList();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ModeratorChatList ModeratorChatListParams { get { return s_params_ModeratorChatList; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ModeratorChatList
        {
            public readonly string filter = "filter";
            public readonly string page = "page";
        }
        static readonly ActionParamsClass_UserChatList s_params_UserChatList = new ActionParamsClass_UserChatList();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UserChatList UserChatListParams { get { return s_params_UserChatList; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UserChatList
        {
            public readonly string page = "page";
        }
        static readonly ActionParamsClass_Support s_params_Support = new ActionParamsClass_Support();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Support SupportParams { get { return s_params_Support; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Support
        {
            public readonly string page = "page";
        }
        static readonly ActionParamsClass_Chat s_params_Chat = new ActionParamsClass_Chat();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Chat ChatParams { get { return s_params_Chat; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Chat
        {
            public readonly string loadChatFromSession = "loadChatFromSession";
            public readonly string isModerator = "isModerator";
            public readonly string isViewOnly = "isViewOnly";
        }
        static readonly ActionParamsClass_SetChatEmail s_params_SetChatEmail = new ActionParamsClass_SetChatEmail();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SetChatEmail SetChatEmailParams { get { return s_params_SetChatEmail; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SetChatEmail
        {
            public readonly string form = "form";
            public readonly string email = "email";
        }
        static readonly ActionParamsClass_CreateMessage s_params_CreateMessage = new ActionParamsClass_CreateMessage();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CreateMessage CreateMessageParams { get { return s_params_CreateMessage; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CreateMessage
        {
            public readonly string form = "ChatMessageForm";
        }
        static readonly ActionParamsClass_CloseChat s_params_CloseChat = new ActionParamsClass_CloseChat();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CloseChat CloseChatParams { get { return s_params_CloseChat; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CloseChat
        {
            public readonly string chatId = "chatId";
            public readonly string isSummarySent = "isSummarySent";
        }
        static readonly ActionParamsClass_SendMessage s_params_SendMessage = new ActionParamsClass_SendMessage();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SendMessage SendMessageParams { get { return s_params_SendMessage; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SendMessage
        {
            public readonly string form = "form";
        }
        static readonly ActionParamsClass_GetRecentMessages s_params_GetRecentMessages = new ActionParamsClass_GetRecentMessages();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetRecentMessages GetRecentMessagesParams { get { return s_params_GetRecentMessages; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetRecentMessages
        {
            public readonly string includeOwnMessages = "includeOwnMessages";
            public readonly string chatId = "chatId";
            public readonly string lastMessageTimestamp = "lastMessageTimestamp";
        }
        static readonly ActionParamsClass_SetChatFrameState s_params_SetChatFrameState = new ActionParamsClass_SetChatFrameState();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SetChatFrameState SetChatFrameStateParams { get { return s_params_SetChatFrameState; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SetChatFrameState
        {
            public readonly string isOpen = "isOpen";
        }
        static readonly ActionParamsClass_MarkChatMessagesRead s_params_MarkChatMessagesRead = new ActionParamsClass_MarkChatMessagesRead();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_MarkChatMessagesRead MarkChatMessagesReadParams { get { return s_params_MarkChatMessagesRead; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_MarkChatMessagesRead
        {
            public readonly string chatId = "chatId";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string _EmailForm = "_EmailForm";
                public readonly string Chat = "Chat";
                public readonly string ChatFrame = "ChatFrame";
                public readonly string ChatsOverview = "ChatsOverview";
                public readonly string ModeratorChatList = "ModeratorChatList";
                public readonly string Support = "Support";
                public readonly string UserChatList = "UserChatList";
            }
            public readonly string _EmailForm = "~/Views/Chat/_EmailForm.cshtml";
            public readonly string Chat = "~/Views/Chat/Chat.cshtml";
            public readonly string ChatFrame = "~/Views/Chat/ChatFrame.cshtml";
            public readonly string ChatsOverview = "~/Views/Chat/ChatsOverview.cshtml";
            public readonly string ModeratorChatList = "~/Views/Chat/ModeratorChatList.cshtml";
            public readonly string Support = "~/Views/Chat/Support.cshtml";
            public readonly string UserChatList = "~/Views/Chat/UserChatList.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class T4MVC_ChatController : Experts.Web.Controllers.ChatController
    {
        public T4MVC_ChatController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult ChatsOverview(int? page, Experts.Web.Models.Chat.ChatsOverviewFilter? filter)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ChatsOverview);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "page", page);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "filter", filter);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ModeratorChatList(Experts.Web.Models.Chat.ChatsOverviewFilter filter, int page)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ModeratorChatList);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "filter", filter);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "page", page);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult UserChatList(int page)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UserChatList);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "page", page);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Support(int? page)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Support);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "page", page);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ChatFrame()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ChatFrame);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult Chat(bool loadChatFromSession, bool isModerator, bool isViewOnly)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Chat);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "loadChatFromSession", loadChatFromSession);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "isModerator", isModerator);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "isViewOnly", isViewOnly);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult SetChatEmail(Experts.Web.Models.Forms.EmailNotUniqueForm form)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetChatEmail);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "form", form);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult CreateMessage(Experts.Web.Models.Forms.ChatMessageForm form)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CreateMessage);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ChatMessageForm", form);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult CloseChat(int chatId, bool isSummarySent)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CloseChat);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "chatId", chatId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "isSummarySent", isSummarySent);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult SendMessage(Experts.Web.Models.Forms.ChatMessageForm form)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SendMessage);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "form", form);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult GetRecentMessages(bool includeOwnMessages, int? chatId, long? lastMessageTimestamp)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetRecentMessages);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "includeOwnMessages", includeOwnMessages);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "chatId", chatId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "lastMessageTimestamp", lastMessageTimestamp);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult FinishChat()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.FinishChat);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult SetChatFrameState(bool isOpen)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetChatFrameState);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "isOpen", isOpen);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult SetChatEmail(string email)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetChatEmail);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "email", email);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult MarkChatMessagesRead(int? chatId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.MarkChatMessagesRead);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "chatId", chatId);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591
