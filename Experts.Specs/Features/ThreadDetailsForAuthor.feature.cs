// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.296
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Experts.Specs.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Widok pytania dla autora")]
    public partial class WidokPytaniaDlaAutoraFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ThreadDetailsForAuthor.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pl-PL"), "Widok pytania dla autora", "", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Usunięcie nieopłaconego pytania")]
        public virtual void UsuniecieNieoplaconegoPytania()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Usunięcie nieopłaconego pytania", ((string[])(null)));
#line 3
this.ScenarioSetup(scenarioInfo);
#line 4
 testRunner.Given("że jestem zalogowany jako użytkownik", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Zakładając ");
#line 5
 testRunner.When("przejdę do /moje-pytania", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Jeśli ");
#line 6
 testRunner.And("kliknę przycisk Nieopłacone pytanie testowe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 7
 testRunner.And("kliknę przycisk Usuń pytanie", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 8
 testRunner.And("kliknę przycisk Tak", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 9
 testRunner.Then("znajdę się na stronie /moje-pytania", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wtedy ");
#line 10
 testRunner.And("nie zobaczę tekstu Nieopłacone pytanie testowe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Opłacenie pytania nieopłaconego w trakcie zadawania")]
        public virtual void OplaceniePytaniaNieoplaconegoWTrakcieZadawania()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Opłacenie pytania nieopłaconego w trakcie zadawania", ((string[])(null)));
#line 12
this.ScenarioSetup(scenarioInfo);
#line 13
 testRunner.Given("że jestem zalogowany jako użytkownik", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Zakładając ");
#line 14
 testRunner.When("przejdę do /moje-pytania", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Jeśli ");
#line 15
 testRunner.And("kliknę przycisk Nieopłacone pytanie testowe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 16
 testRunner.And("kliknę przycisk Zapłać za pytanie", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 17
 testRunner.And("wpiszę do pola Imię tekst T4JNY_c0de#", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 18
 testRunner.And("wpiszę do pola Nazwisko tekst test", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 19
 testRunner.And("wpiszę do pola Adres e-mail tekst user-asknuts@asknuts.com", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 20
 testRunner.And("kliknę przycisk submitPaymentModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 21
 testRunner.And("przejdę do /", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 22
 testRunner.And("przejdę do /moje-pytania", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 23
 testRunner.And("kliknę przycisk Nieopłacone pytanie testowe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 24
 testRunner.Then("nie zobaczę tekstu Zapłać za pytanie", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wtedy ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Akceptacja odpowiedzi z oceną")]
        public virtual void AkceptacjaOdpowiedziZOcena()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Akceptacja odpowiedzi z oceną", ((string[])(null)));
#line 26
this.ScenarioSetup(scenarioInfo);
#line 27
 testRunner.Given("że jestem zalogowany jako użytkownik", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Zakładając ");
#line 28
 testRunner.When("przejdę do /moje-pytania", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Jeśli ");
#line 29
 testRunner.And("kliknę przycisk Pytanie testowe z ekspertem", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 30
 testRunner.And("kliknę przycisk Zaakceptuj i oceń odpowiedź!", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 31
 testRunner.And("wpiszę do pola Opis tekst Testowa neutralna opinia", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 32
 testRunner.And("kliknę radio button Neutralnie", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 33
 testRunner.And("kliknę przycisk Oceń i zaakceptuj", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 34
 testRunner.Then("poczekam aż zobaczę tekst Zaakceptowałeś odpowiedź", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wtedy ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Akceptacja odpowiedzi bez oceny")]
        public virtual void AkceptacjaOdpowiedziBezOceny()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Akceptacja odpowiedzi bez oceny", ((string[])(null)));
#line 36
this.ScenarioSetup(scenarioInfo);
#line 37
 testRunner.Given("że jestem zalogowany jako użytkownik", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Zakładając ");
#line 38
 testRunner.When("przejdę do /moje-pytania", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Jeśli ");
#line 39
 testRunner.And("kliknę przycisk Pytanie testowe z ekspertem", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 40
 testRunner.And("kliknę przycisk Zaakceptuj i oceń odpowiedź!", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 41
 testRunner.And("kliknę przycisk Zaakceptuj bez oceny", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 42
 testRunner.Then("poczekam aż zobaczę tekst Zaakceptowałeś odpowiedź", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wtedy ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Akceptacja wyższej ceny")]
        public virtual void AkceptacjaWyzszejCeny()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Akceptacja wyższej ceny", ((string[])(null)));
#line 44
this.ScenarioSetup(scenarioInfo);
#line 45
 testRunner.Given("że jestem zalogowany jako użytkownik", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Zakładając ");
#line 46
 testRunner.When("przejdę do /moje-pytania", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Jeśli ");
#line 47
 testRunner.And("kliknę przycisk Pytanie testowe bez eksperta", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 48
 testRunner.And("kliknę przycisk Zaakceptuj", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 49
 testRunner.And("wpiszę do pola Imię tekst T4JNY_c0de#", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 50
 testRunner.And("wpiszę do pola Nazwisko tekst test", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 51
 testRunner.And("wpiszę do pola Adres e-mail tekst user-asknuts@asknuts.com", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 52
 testRunner.And("kliknę przycisk submitPaymentModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 53
 testRunner.Then("poczekam aż zobaczę tekst test-expert2 odpowiada na Twoje pytanie", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wtedy ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Edycja pytania")]
        public virtual void EdycjaPytania()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Edycja pytania", ((string[])(null)));
#line 55
this.ScenarioSetup(scenarioInfo);
#line 56
 testRunner.Given("że jestem zalogowany jako użytkownik", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Zakładając ");
#line 57
 testRunner.When("przejdę do /moje-pytania", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Jeśli ");
#line 58
 testRunner.And("kliknę przycisk Pytanie testowe bez eksperta", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 59
 testRunner.And("w poście o treści Pytanie testowe bez eksperta kliknę przycisk edycji", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 60
 testRunner.And("do pola tekstowego wpiszę tekst Zmienione pytanie testowe bez eksperta", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 61
 testRunner.And("kliknę przycisk Zapisz", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 62
 testRunner.And("odświeżę stronę", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 63
 testRunner.Then("zobaczę tekst Zmienione pytanie testowe bez eksperta", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wtedy ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Blokada edycji pytania po przejęciu przez eksperta")]
        public virtual void BlokadaEdycjiPytaniaPoPrzejeciuPrzezEksperta()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Blokada edycji pytania po przejęciu przez eksperta", ((string[])(null)));
#line 65
this.ScenarioSetup(scenarioInfo);
#line 66
 testRunner.Given("że jestem zalogowany jako ekspert", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Zakładając ");
#line 67
 testRunner.When("przejdę do /pytania-uzytkownikow", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Jeśli ");
#line 68
 testRunner.And("kliknę przycisk Pytanie testowe bez eksperta", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 69
 testRunner.And("kliknę przycisk Przejmij pytanie", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 70
 testRunner.And("zaloguję się jako użytkownik", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 71
 testRunner.And("przejdę do /moje-pytania", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 72
 testRunner.And("kliknę przycisk Pytanie testowe bez eksperta", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 73
 testRunner.Then("nie zobaczę żadnych przycisków edycji", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wtedy ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Edycja odpowiedzi")]
        public virtual void EdycjaOdpowiedzi()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Edycja odpowiedzi", ((string[])(null)));
#line 75
this.ScenarioSetup(scenarioInfo);
#line 76
 testRunner.Given("że jestem zalogowany jako użytkownik", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Zakładając ");
#line 77
 testRunner.When("przejdę do /moje-pytania", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Jeśli ");
#line 78
 testRunner.And("kliknę przycisk Pytanie testowe z ekspertem", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 79
 testRunner.And("kliknę przycisk Odpowiedz", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 80
 testRunner.And("do pola tekstowego wpiszę tekst Testowa odpowiedź", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 81
 testRunner.And("kliknę przycisk Dodaj odpowiedź", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 82
 testRunner.And("w poście o treści Testowa odpowiedź kliknę przycisk edycji", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 83
 testRunner.And("do pola tekstowego wpiszę tekst Zmieniona testowa odpowiedź", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 84
 testRunner.And("kliknę przycisk Zapisz", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 85
 testRunner.And("odświeżę stronę", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 86
 testRunner.Then("zobaczę tekst Zmieniona testowa odpowiedź", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wtedy ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Dodawanie załącznika")]
        public virtual void DodawanieZalacznika()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Dodawanie załącznika", ((string[])(null)));
#line 88
this.ScenarioSetup(scenarioInfo);
#line 89
 testRunner.Given("że jestem zalogowany jako użytkownik", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Zakładając ");
#line 90
 testRunner.When("przejdę do /moje-pytania", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Jeśli ");
#line 91
 testRunner.And("kliknę przycisk Pytanie testowe bez eksperta", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 92
 testRunner.And("prześlę załącznik palenque_temple.jpg", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 93
 testRunner.Then("zobaczę tekst palenque_temple.jpg", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wtedy ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
