// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.296
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Experts.Specs.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Rejestracja użytkownika")]
    public partial class RejestracjaUzytkownikaFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "UserSignUp.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pl-PL"), "Rejestracja użytkownika", "", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Rejestracja klienta")]
        public virtual void RejestracjaKlienta()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Rejestracja klienta", ((string[])(null)));
#line 3
this.ScenarioSetup(scenarioInfo);
#line 4
 testRunner.When("przejdę do /zarejestruj-sie", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Jeśli ");
#line 5
 testRunner.And("wpiszę do pola Adres e-mail tekst nie-istnieje@gorrion.pl", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 6
 testRunner.And("wpiszę do pola Hasło tekst haslo1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 7
 testRunner.And("wpiszę do pola Powtórz hasło tekst haslo1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 8
 testRunner.And("kliknę checkbox zapoznałem się i akceptuję regulamin strony oraz politykę prywatn" +
                    "ości.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 9
 testRunner.And("kliknę przycisk Zarejestruj się", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 10
 testRunner.And("kliknę w linka aktywacyjny użytkownika nie-istnieje@gorrion.pl", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 11
 testRunner.And("przejdę do /zaloguj-sie", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 12
 testRunner.And("wpiszę do pola Adres e-mail tekst nie-istnieje@gorrion.pl", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 13
 testRunner.And("wpiszę do pola Hasło tekst haslo1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 14
 testRunner.And("kliknę przycisk Zaloguj się", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 15
 testRunner.Then("zobaczę tekst Moje konto", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wtedy ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Rejestracja klienta - walidacja - różne hasła")]
        public virtual void RejestracjaKlienta_Walidacja_RozneHasla()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Rejestracja klienta - walidacja - różne hasła", ((string[])(null)));
#line 17
this.ScenarioSetup(scenarioInfo);
#line 18
 testRunner.When("przejdę do /zarejestruj-sie", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Jeśli ");
#line 19
 testRunner.And("wpiszę do pola Adres e-mail tekst nie-istnieje@gorrion.pl", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 20
 testRunner.And("wpiszę do pola Hasło tekst haslo1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 21
 testRunner.And("wpiszę do pola Powtórz hasło tekst haslo2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 22
 testRunner.And("kliknę checkbox zapoznałem się i akceptuję regulamin strony oraz politykę prywatn" +
                    "ości.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 23
 testRunner.And("kliknę przycisk Zarejestruj się", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 24
 testRunner.Then("zobaczę tekst Hasła muszą się zgadzać", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wtedy ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Rejestracja klienta - walidacja - format adresu e-mail")]
        public virtual void RejestracjaKlienta_Walidacja_FormatAdresuE_Mail()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Rejestracja klienta - walidacja - format adresu e-mail", ((string[])(null)));
#line 26
this.ScenarioSetup(scenarioInfo);
#line 27
 testRunner.When("przejdę do /zarejestruj-sie", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Jeśli ");
#line 28
 testRunner.And("wpiszę do pola Adres e-mail tekst to-nie-jest-poprawny-email", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 29
 testRunner.And("wpiszę do pola Hasło tekst haslo1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 30
 testRunner.And("wpiszę do pola Powtórz hasło tekst haslo1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 31
 testRunner.And("kliknę checkbox zapoznałem się i akceptuję regulamin strony oraz politykę prywatn" +
                    "ości.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 32
 testRunner.And("kliknę przycisk Zarejestruj się", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 33
 testRunner.Then("znajdę się na stronie /zarejestruj-sie", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wtedy ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Rejestracja klienta - duplikacja adresu e-mail")]
        public virtual void RejestracjaKlienta_DuplikacjaAdresuE_Mail()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Rejestracja klienta - duplikacja adresu e-mail", ((string[])(null)));
#line 36
this.ScenarioSetup(scenarioInfo);
#line 37
 testRunner.When("przejdę do /zarejestruj-sie", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Jeśli ");
#line 38
 testRunner.And("wpiszę do pola Adres e-mail tekst prawoipodatki@asknuts.com", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 39
 testRunner.And("wpiszę do pola Hasło tekst haslo1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 40
 testRunner.And("wpiszę do pola Powtórz hasło tekst haslo1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 41
 testRunner.And("kliknę checkbox zapoznałem się i akceptuję regulamin strony oraz politykę prywatn" +
                    "ości.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 42
 testRunner.And("kliknę przycisk Zarejestruj się", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 43
 testRunner.Then("zobaczę tekst Adres e-mail został już użyty. Podaj inny adres.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wtedy ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Regulamin strony podczas rejestracji")]
        public virtual void RegulaminStronyPodczasRejestracji()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Regulamin strony podczas rejestracji", ((string[])(null)));
#line 45
this.ScenarioSetup(scenarioInfo);
#line 46
  testRunner.When("przejdę do /zarejestruj-sie", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Jeśli ");
#line 47
 testRunner.And("kliknę przycisk regulamin strony", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 48
 testRunner.Then("znajdę się na stronie /poznaj-asknuts/regulamin", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wtedy ");
#line 49
 testRunner.And("zobaczę tekst Regulamin", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Polityka prywatności podczas rejestracji")]
        public virtual void PolitykaPrywatnosciPodczasRejestracji()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Polityka prywatności podczas rejestracji", ((string[])(null)));
#line 51
this.ScenarioSetup(scenarioInfo);
#line 52
  testRunner.When("przejdę do /zarejestruj-sie", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Jeśli ");
#line 53
 testRunner.And("kliknę przycisk politykę prywatności", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 54
 testRunner.Then("znajdę się na stronie /polityka-prywatnosci", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wtedy ");
#line 55
 testRunner.And("zobaczę tekst Polityka prywatności", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
