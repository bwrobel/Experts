// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.296
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Experts.Specs.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Oczyszczanie wątków")]
    public partial class OczyszczanieWatkowFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ThreadsSanitization.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pl-PL"), "Oczyszczanie wątków", "", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Edycja treści posta")]
        public virtual void EdycjaTresciPosta()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Edycja treści posta", ((string[])(null)));
#line 3
this.ScenarioSetup(scenarioInfo);
#line 4
 testRunner.Given("że jestem zalogowany jako moderator", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Zakładając ");
#line 5
 testRunner.When("przejdę do /czyszczenie-pytan", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Jeśli ");
#line 6
 testRunner.And("kliknę przycisk Zamknięte pytanie testowe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 7
 testRunner.And("w poście do oczyszczenia o treści Odpowiedź testowa kliknę link edytuj", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 8
 testRunner.And("w poście do oczyszczenia o treści Odpowiedź testowa wpiszę tekst Odpowiedź testow" +
                    "a na widok publiczny", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 9
 testRunner.And("w poście do oczyszczenia o treści Odpowiedź testowa kliknę link Zapisz", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 10
 testRunner.Then("zobaczę tekst Odpowiedź testowa na widok publiczny", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wtedy ");
#line 11
 testRunner.When("w poście do oczyszczenia o treści Odpowiedź testowa kliknę link Oryginalny", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Jeśli ");
#line 12
 testRunner.Then("zobaczę tekst Odpowiedź testowa", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wtedy ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Ukrywanie posta")]
        public virtual void UkrywaniePosta()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Ukrywanie posta", ((string[])(null)));
#line 14
this.ScenarioSetup(scenarioInfo);
#line 15
 testRunner.Given("że jestem zalogowany jako moderator", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Zakładając ");
#line 16
 testRunner.When("przejdę do /czyszczenie-pytan", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Jeśli ");
#line 17
 testRunner.And("kliknę przycisk Zamknięte pytanie testowe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 18
 testRunner.And("w poście do oczyszczenia o treści Odpowiedź testowa kliknę link ukryj", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 19
 testRunner.Then("zobaczę tekst pokaż", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wtedy ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Upublicznienie pytania")]
        public virtual void UpublicznieniePytania()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Upublicznienie pytania", ((string[])(null)));
#line 21
this.ScenarioSetup(scenarioInfo);
#line 22
 testRunner.Given("że jestem zalogowany jako moderator", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Zakładając ");
#line 23
 testRunner.When("przejdę do /czyszczenie-pytan", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Jeśli ");
#line 24
 testRunner.And("kliknę przycisk Zamknięte pytanie testowe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 25
 testRunner.And("wybiorę z listy Status pozycję Upubliczniony", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 26
 testRunner.And("kliknę przycisk Katalog odpowiedzi", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Oraz ");
#line 27
 testRunner.Then("zobaczę tekst Zamknięte pytanie testowe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wtedy ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
